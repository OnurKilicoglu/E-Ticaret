@model BlogPostListViewModel
@{
    ViewData["Title"] = "Blog Post Management";
}

<!-- Page Header -->
<div class="row mb-4">
    <div class="col-md-6">
        <h2 class="mb-0">
            <i class="bi bi-journal-text text-primary"></i>
            Blog Post Management
        </h2>
        <p class="text-muted">Manage blog posts, articles, and content</p>
    </div>
    <div class="col-md-6 text-end">
        <div class="btn-group" role="group">
            <a asp-action="Create" class="btn btn-success">
                <i class="bi bi-plus-lg"></i>
                New Blog Post
            </a>
            <button type="button" class="btn btn-outline-info" data-bs-toggle="modal" data-bs-target="#statisticsModal">
                <i class="bi bi-bar-chart"></i>
                Statistics
            </button>
        </div>
    </div>
</div>

<!-- Alert Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle-fill"></i>
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="bi bi-exclamation-triangle-fill"></i>
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Quick Statistics Cards -->
<div class="row mb-4">
    <div class="col-md-2">
        <div class="card text-center bg-primary text-white">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.TotalPosts</h5>
                <p class="card-text small mb-0">Total Posts</p>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card text-center bg-success text-white">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.PublishedPosts</h5>
                <p class="card-text small mb-0">Published</p>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card text-center bg-warning text-dark">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.DraftPosts</h5>
                <p class="card-text small mb-0">Drafts</p>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card text-center bg-info text-white">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.FeaturedPosts</h5>
                <p class="card-text small mb-0">Featured</p>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card text-center bg-secondary text-white">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.TotalViews</h5>
                <p class="card-text small mb-0">Total Views</p>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card text-center bg-dark text-white">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.TotalComments</h5>
                <p class="card-text small mb-0">Comments</p>
            </div>
        </div>
    </div>
</div>

<!-- Advanced Filters -->
<div class="card mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-3">
                <label for="searchTerm" class="form-label">Search</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-search"></i>
                    </span>
                    <input type="text" class="form-control" id="searchTerm" name="searchTerm" 
                           value="@Model.SearchTerm" placeholder="Title, content, author...">
                </div>
            </div>
            <div class="col-md-2">
                <label for="category" class="form-label">Category</label>
                <select class="form-select" id="category" name="category">
                    <option value="">All Categories</option>
                    @foreach (var category in Model.CategoryOptions)
                    {
                        <option value="@category.Value" selected="@(category.Value == Model.Category)">
                            @category.Text
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label for="author" class="form-label">Author</label>
                <select class="form-select" id="author" name="author">
                    <option value="">All Authors</option>
                    @foreach (var author in Model.AuthorOptions)
                    {
                        <option value="@author.Value" selected="@(author.Value == Model.Author)">
                            @author.Text
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-1">
                <label for="isPublished" class="form-label">Status</label>
                <select class="form-select" id="isPublished" name="isPublished">
                    <option value="">All</option>
                    <option value="true" selected="@(Model.IsPublished == true)">Published</option>
                    <option value="false" selected="@(Model.IsPublished == false)">Draft</option>
                </select>
            </div>
            <div class="col-md-2">
                <label for="tags" class="form-label">Tags</label>
                <input type="text" class="form-control" id="tags" name="tags" 
                       value="@Model.Tags" placeholder="tag1, tag2...">
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <div class="btn-group w-100" role="group">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-funnel"></i>
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-clockwise"></i>
                    </a>
                </div>
            </div>
        </form>
        
        <!-- Date Range Filter -->
        <div class="row g-3 mt-2">
            <div class="col-md-3">
                <label for="fromDate" class="form-label">From Date</label>
                <input type="date" class="form-control" id="fromDate" name="fromDate" 
                       value="@(Model.FromDate?.ToString("yyyy-MM-dd"))">
            </div>
            <div class="col-md-3">
                <label for="toDate" class="form-label">To Date</label>
                <input type="date" class="form-control" id="toDate" name="toDate" 
                       value="@(Model.ToDate?.ToString("yyyy-MM-dd"))">
            </div>
            <div class="col-md-2">
                <label for="sortBy" class="form-label">Sort By</label>
                <select class="form-select" id="sortBy" name="sortBy">
                    <option value="publishedDate" selected="@(Model.SortBy == "publishedDate")">Published Date</option>
                    <option value="createdDate" selected="@(Model.SortBy == "createdDate")">Created Date</option>
                    <option value="title" selected="@(Model.SortBy == "title")">Title</option>
                    <option value="author" selected="@(Model.SortBy == "author")">Author</option>
                    <option value="viewCount" selected="@(Model.SortBy == "viewCount")">Views</option>
                </select>
            </div>
            <div class="col-md-1">
                <label for="sortOrder" class="form-label">Order</label>
                <select class="form-select" id="sortOrder" name="sortOrder">
                    <option value="desc" selected="@(Model.SortOrder == "desc")">Desc</option>
                    <option value="asc" selected="@(Model.SortOrder == "asc")">Asc</option>
                </select>
            </div>
        </div>
    </div>
</div>

<!-- Results Info -->
@if (Model.TotalItems > 0)
{
    <div class="row mb-3">
        <div class="col-md-6">
            <p class="text-muted mb-0">
                Showing @Model.StartItem to @Model.EndItem of @Model.TotalItems blog posts
                @if (Model.HasFilters)
                {
                    <span>with applied filters</span>
                }
            </p>
        </div>
        <div class="col-md-6 text-end">
            <small class="text-muted">
                Page @Model.CurrentPage of @Model.TotalPages
            </small>
        </div>
    </div>
}

<!-- Blog Posts List -->
<div class="card">
    <div class="card-body">
        @if (Model.TotalItems > 0)
        {
            <div class="row" id="blogPostsContainer">
                @foreach (var post in Model.BlogPosts)
                {
                    <div class="col-md-6 col-lg-4 mb-4" data-post-id="@post.Id">
                        <div class="card h-100 blog-post-card">
                            <!-- Feature Image -->
                            <div class="card-img-top position-relative" style="height: 200px; background: #f8f9fa;">
                                @if (!string.IsNullOrEmpty(post.ImageUrl))
                                {
                                    <img src="@post.ImageUrl" alt="@post.Title" 
                                         class="img-fluid w-100 h-100" style="object-fit: cover;">
                                }
                                else
                                {
                                    <div class="d-flex align-items-center justify-content-center h-100 text-muted">
                                        <i class="bi bi-journal-text display-4"></i>
                                    </div>
                                }
                                
                                <!-- Status Badges -->
                                <div class="position-absolute top-0 start-0 p-2">
                                    <span class="badge bg-@post.StatusCssClass">
                                        @post.StatusDisplayName
                                    </span>
                                    @if (post.IsFeatured)
                                    {
                                        <span class="badge bg-@post.FeaturedCssClass ms-1">
                                            <i class="bi bi-star-fill"></i>
                                            Featured
                                        </span>
                                    }
                                </div>
                                
                                <!-- View Count -->
                                <div class="position-absolute top-0 end-0 p-2">
                                    <span class="badge bg-dark">
                                        <i class="bi bi-eye"></i>
                                        @post.ViewCount
                                    </span>
                                </div>
                            </div>
                            
                            <!-- Card Content -->
                            <div class="card-body">
                                <h6 class="card-title">@post.TruncatedTitle</h6>
                                <p class="card-text text-muted small">@post.TruncatedSummary</p>
                                
                                <div class="mb-2">
                                    <small class="text-muted">
                                        <i class="bi bi-person"></i>
                                        @post.Author
                                    </small>
                                    @if (!string.IsNullOrEmpty(post.Category))
                                    {
                                        <br>
                                        <small class="text-muted">
                                            <i class="bi bi-folder"></i>
                                            @post.Category
                                        </small>
                                    }
                                </div>
                                
                                @if (post.TagList.Any())
                                {
                                    <div class="mb-2">
                                        @foreach (var tag in post.TagList.Take(3))
                                        {
                                            <span class="badge bg-light text-dark me-1">@tag</span>
                                        }
                                        @if (post.TagList.Count > 3)
                                        {
                                            <span class="badge bg-light text-dark">+@(post.TagList.Count - 3) more</span>
                                        }
                                    </div>
                                }
                                
                                <div class="d-flex justify-content-between align-items-center">
                                    <small class="text-muted">
                                        @if (post.PublishedDate.HasValue)
                                        {
                                            @post.PublishedDate.Value.ToString("MMM dd, yyyy")
                                        }
                                        else
                                        {
                                            @post.CreatedDate.ToString("MMM dd, yyyy")
                                        }
                                    </small>
                                    <small class="text-muted">
                                        <i class="bi bi-chat"></i>
                                        @post.CommentCount
                                    </small>
                                </div>
                            </div>
                            
                            <!-- Card Actions -->
                            <div class="card-footer bg-transparent">
                                <div class="row g-2">
                                    <div class="col-6">
                                        <div class="btn-group w-100" role="group">
                                            <a asp-action="Details" asp-route-id="@post.Id" 
                                               class="btn btn-sm btn-outline-info" title="View Details">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@post.Id" 
                                               class="btn btn-sm btn-outline-primary" title="Edit Post">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="btn-group w-100" role="group">
                                            <button class="btn btn-sm btn-outline-@(post.IsPublished ? "warning" : "success") toggle-published" 
                                                    data-post-id="@post.Id" 
                                                    title="@(post.IsPublished ? "Unpublish" : "Publish")">
                                                <i class="bi bi-@(post.IsPublished ? "pause" : "play")-fill"></i>
                                            </button>
                                            <button class="btn btn-sm btn-outline-@(post.IsFeatured ? "warning" : "primary") toggle-featured" 
                                                    data-post-id="@post.Id" 
                                                    title="@(post.IsFeatured ? "Unfeature" : "Feature")">
                                                <i class="bi bi-star@(post.IsFeatured ? "-fill" : "")"></i>
                                            </button>
                                            <a asp-action="Delete" asp-route-id="@post.Id" 
                                               class="btn btn-sm btn-outline-danger" title="Delete Post">
                                                <i class="bi bi-trash"></i>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <nav aria-label="Blog posts pagination" class="mt-4">
                    <ul class="pagination justify-content-center mb-0">
                        <!-- Previous Page -->
                        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                            <a class="page-link" 
                               asp-action="Index" 
                               asp-route-page="@(Model.CurrentPage - 1)" 
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-searchTerm="@Model.SearchTerm"
                               asp-route-category="@Model.Category"
                               asp-route-isPublished="@Model.IsPublished"
                               asp-route-isFeatured="@Model.IsFeatured"
                               asp-route-author="@Model.Author"
                               asp-route-tags="@Model.Tags"
                               asp-route-fromDate="@Model.FromDate"
                               asp-route-toDate="@Model.ToDate"
                               asp-route-sortBy="@Model.SortBy"
                               asp-route-sortOrder="@Model.SortOrder">
                                <i class="bi bi-chevron-left"></i>
                                Previous
                            </a>
                        </li>

                        <!-- Page Numbers -->
                        @{
                            var startPage = Math.Max(1, Model.CurrentPage - 2);
                            var endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                        }

                        @for (var i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" 
                                   asp-action="Index" 
                                   asp-route-page="@i" 
                                   asp-route-pageSize="@Model.PageSize"
                                   asp-route-searchTerm="@Model.SearchTerm"
                                   asp-route-category="@Model.Category"
                                   asp-route-isPublished="@Model.IsPublished"
                                   asp-route-isFeatured="@Model.IsFeatured"
                                   asp-route-author="@Model.Author"
                                   asp-route-tags="@Model.Tags"
                                   asp-route-fromDate="@Model.FromDate"
                                   asp-route-toDate="@Model.ToDate"
                                   asp-route-sortBy="@Model.SortBy"
                                   asp-route-sortOrder="@Model.SortOrder">@i</a>
                            </li>
                        }

                        <!-- Next Page -->
                        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                            <a class="page-link" 
                               asp-action="Index" 
                               asp-route-page="@(Model.CurrentPage + 1)" 
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-searchTerm="@Model.SearchTerm"
                               asp-route-category="@Model.Category"
                               asp-route-isPublished="@Model.IsPublished"
                               asp-route-isFeatured="@Model.IsFeatured"
                               asp-route-author="@Model.Author"
                               asp-route-tags="@Model.Tags"
                               asp-route-fromDate="@Model.FromDate"
                               asp-route-toDate="@Model.ToDate"
                               asp-route-sortBy="@Model.SortBy"
                               asp-route-sortOrder="@Model.SortOrder">
                                Next
                                <i class="bi bi-chevron-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
            }
        }
        else
        {
            <!-- No Results -->
            <div class="text-center py-5">
                <i class="bi bi-journal-text display-1 text-muted"></i>
                <h4 class="mt-3">No blog posts found</h4>
                <p class="text-muted">
                    @if (Model.HasFilters)
                    {
                        <span>No blog posts match your search criteria.</span>
                        <br>
                        <a asp-action="Index" class="btn btn-link">Clear filters</a>
                        <span>to see all posts.</span>
                    }
                    else
                    {
                        <span>No blog posts have been created yet.</span>
                        <br>
                        <a asp-action="Create" class="btn btn-primary">Create first blog post</a>
                    }
                </p>
            </div>
        }
    </div>
</div>

<!-- Statistics Modal -->
<div class="modal fade" id="statisticsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-bar-chart text-primary"></i>
                    Blog Statistics
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <h6>Content Statistics</h6>
                        <dl class="row">
                            <dt class="col-sm-6">Total Posts:</dt>
                            <dd class="col-sm-6">@Model.Statistics.TotalPosts</dd>
                            
                            <dt class="col-sm-6">Published Posts:</dt>
                            <dd class="col-sm-6">@Model.Statistics.PublishedPosts</dd>
                            
                            <dt class="col-sm-6">Draft Posts:</dt>
                            <dd class="col-sm-6">@Model.Statistics.DraftPosts</dd>
                            
                            <dt class="col-sm-6">Featured Posts:</dt>
                            <dd class="col-sm-6">@Model.Statistics.FeaturedPosts</dd>
                            
                            <dt class="col-sm-6">Categories:</dt>
                            <dd class="col-sm-6">@Model.Statistics.CategoriesCount</dd>
                            
                            <dt class="col-sm-6">Tags:</dt>
                            <dd class="col-sm-6">@Model.Statistics.TagsCount</dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <h6>Engagement Statistics</h6>
                        <dl class="row">
                            <dt class="col-sm-6">Total Views:</dt>
                            <dd class="col-sm-6">@Model.Statistics.TotalViews</dd>
                            
                            <dt class="col-sm-6">Total Comments:</dt>
                            <dd class="col-sm-6">@Model.Statistics.TotalComments</dd>
                            
                            @if (Model.Statistics.LastPublished.HasValue)
                            {
                                <dt class="col-sm-6">Last Published:</dt>
                                <dd class="col-sm-6">@Model.Statistics.LastPublished.Value.ToString("MMM dd, yyyy")</dd>
                            }
                            
                            @if (!string.IsNullOrEmpty(Model.Statistics.MostViewedPostTitle))
                            {
                                <dt class="col-sm-6">Most Viewed:</dt>
                                <dd class="col-sm-6">@Model.Statistics.MostViewedPostTitle (@Model.Statistics.MostViewedPostViews views)</dd>
                            }
                            
                            @if (!string.IsNullOrEmpty(Model.Statistics.LatestPostTitle))
                            {
                                <dt class="col-sm-6">Latest Post:</dt>
                                <dd class="col-sm-6">@Model.Statistics.LatestPostTitle</dd>
                            }
                        </dl>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Auto-submit form when filters change
            $('#category, #author, #isPublished, #sortBy, #sortOrder').on('change', function() {
                $(this).closest('form').submit();
            });

            // Date range auto-submit
            $('#fromDate, #toDate').on('change', function() {
                $(this).closest('form').submit();
            });

            // Published status toggle functionality
            $('.toggle-published').on('click', function() {
                const postId = $(this).data('post-id');
                const button = $(this);
                
                $.post('@Url.Action("TogglePublished")', { id: postId })
                    .done(function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert('Error: ' + response.message);
                        }
                    })
                    .fail(function() {
                        alert('Error updating published status');
                    });
            });

            // Featured status toggle functionality
            $('.toggle-featured').on('click', function() {
                const postId = $(this).data('post-id');
                const button = $(this);
                
                $.post('@Url.Action("ToggleFeatured")', { id: postId })
                    .done(function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert('Error: ' + response.message);
                        }
                    })
                    .fail(function() {
                        alert('Error updating featured status');
                    });
            });

            // Tag input autocomplete (basic implementation)
            const availableTags = @Html.Raw(Json.Serialize(Model.TagOptions));
            if (availableTags.length > 0) {
                
                $('#tags').on('input', function() {
                    const input = $(this);
                    const val = input.val();
                    const lastCommaIndex = val.lastIndexOf(',');
                    const currentTag = lastCommaIndex >= 0 ? val.substring(lastCommaIndex + 1).trim() : val.trim();
                    
                    // Simple autocomplete suggestion display
                    if (currentTag.length > 1) {
                        const suggestions = availableTags.filter(tag => 
                            tag.toLowerCase().includes(currentTag.toLowerCase())
                        ).slice(0, 5);
                        
                        // You could implement a dropdown here
                        console.log('Tag suggestions:', suggestions);
                    }
                });
            }
        });
    </script>

    <style>
        .blog-post-card {
            transition: transform 0.2s ease-in-out;
        }
        
        .blog-post-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .card-img-top img {
            transition: transform 0.3s ease;
        }
        
        .blog-post-card:hover .card-img-top img {
            transform: scale(1.05);
        }
    </style>
}
