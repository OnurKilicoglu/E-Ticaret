@model FAQListViewModel
@{
    ViewData["Title"] = "FAQ Management";
}

<!-- Page Header -->
<div class="row mb-4">
    <div class="col-md-6">
        <h2 class="mb-0">
            <i class="bi bi-question-circle text-primary"></i>
            FAQ Management
        </h2>
        <p class="text-muted">Manage frequently asked questions and categories</p>
    </div>
    <div class="col-md-6 text-end">
        <div class="btn-group" role="group">
            <a asp-action="Create" class="btn btn-success">
                <i class="bi bi-plus-lg"></i>
                New FAQ
            </a>
            <a asp-controller="FAQCategory" asp-action="Index" class="btn btn-outline-primary">
                <i class="bi bi-tags"></i>
                Categories
            </a>
            <button type="button" class="btn btn-outline-info" data-bs-toggle="modal" data-bs-target="#statisticsModal">
                <i class="bi bi-bar-chart"></i>
                Statistics
            </button>
            <a asp-action="Export" class="btn btn-outline-secondary">
                <i class="bi bi-download"></i>
                Export
            </a>
        </div>
    </div>
</div>

<!-- Alert Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle-fill"></i>
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="bi bi-exclamation-triangle-fill"></i>
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Quick Statistics Cards -->
<div class="row mb-4">
    <div class="col-md-2">
        <div class="card text-center bg-primary text-white">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.TotalFAQs</h5>
                <p class="card-text small mb-0">Total FAQs</p>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card text-center bg-success text-white">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.ActiveFAQs</h5>
                <p class="card-text small mb-0">Active</p>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card text-center bg-warning text-dark">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.InactiveFAQs</h5>
                <p class="card-text small mb-0">Inactive</p>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card text-center bg-info text-white">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.TotalViews</h5>
                <p class="card-text small mb-0">Total Views</p>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card text-center bg-secondary text-white">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.TotalHelpfulVotes</h5>
                <p class="card-text small mb-0">Helpful Votes</p>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card text-center bg-dark text-white">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.TotalCategories</h5>
                <p class="card-text small mb-0">Categories</p>
            </div>
        </div>
    </div>
</div>

<!-- Advanced Filters -->
<div class="card mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-3">
                <label for="searchTerm" class="form-label">Search</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-search"></i>
                    </span>
                    <input type="text" class="form-control" id="searchTerm" name="searchTerm" 
                           value="@Model.SearchTerm" placeholder="Question, answer...">
                </div>
            </div>
            <div class="col-md-2">
                <label for="categoryId" class="form-label">Category</label>
                <select class="form-select" id="categoryId" name="categoryId">
                    <option value="">All Categories</option>
                    @foreach (var category in Model.CategoryOptions)
                    {
                        <option value="@category.Value" selected="@(category.Value == Model.CategoryId?.ToString())">
                            @category.Text
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label for="author" class="form-label">Author</label>
                <select class="form-select" id="author" name="author">
                    <option value="">All Authors</option>
                    @foreach (var author in Model.AuthorOptions)
                    {
                        <option value="@author.Value" selected="@(author.Value == Model.Author)">
                            @author.Text
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-1">
                <label for="isActive" class="form-label">Status</label>
                <select class="form-select" id="isActive" name="isActive">
                    <option value="">All</option>
                    <option value="true" selected="@(Model.IsActive == true)">Active</option>
                    <option value="false" selected="@(Model.IsActive == false)">Inactive</option>
                </select>
            </div>
            <div class="col-md-2">
                <label for="tags" class="form-label">Tags</label>
                <input type="text" class="form-control" id="tags" name="tags" 
                       value="@Model.Tags" placeholder="tag1, tag2...">
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <div class="btn-group w-100" role="group">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-funnel"></i>
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-clockwise"></i>
                    </a>
                </div>
            </div>
        </form>
        
        <!-- Sort Options -->
        <div class="row g-3 mt-2">
            <div class="col-md-3">
                <label for="sortBy" class="form-label">Sort By</label>
                <select class="form-select" id="sortBy" name="sortBy">
                    <option value="displayOrder" selected="@(Model.SortBy == "displayOrder")">Display Order</option>
                    <option value="question" selected="@(Model.SortBy == "question")">Question</option>
                    <option value="viewCount" selected="@(Model.SortBy == "viewCount")">Views</option>
                    <option value="helpfulness" selected="@(Model.SortBy == "helpfulness")">Helpfulness</option>
                    <option value="createdDate" selected="@(Model.SortBy == "createdDate")">Created Date</option>
                    <option value="category" selected="@(Model.SortBy == "category")">Category</option>
                </select>
            </div>
            <div class="col-md-2">
                <label for="sortOrder" class="form-label">Order</label>
                <select class="form-select" id="sortOrder" name="sortOrder">
                    <option value="asc" selected="@(Model.SortOrder == "asc")">Ascending</option>
                    <option value="desc" selected="@(Model.SortOrder == "desc")">Descending</option>
                </select>
            </div>
            <div class="col-md-2">
                <label for="pageSize" class="form-label">Items per page</label>
                <select class="form-select" id="pageSize" name="pageSize">
                    <option value="10" selected="@(Model.PageSize == 10)">10</option>
                    <option value="20" selected="@(Model.PageSize == 20)">20</option>
                    <option value="50" selected="@(Model.PageSize == 50)">50</option>
                    <option value="100" selected="@(Model.PageSize == 100)">100</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">&nbsp;</label>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="enableDragDrop">
                    <label class="form-check-label" for="enableDragDrop">
                        Enable Drag & Drop
                    </label>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Results Info -->
@if (Model.TotalItems > 0)
{
    <div class="row mb-3">
        <div class="col-md-6">
            <p class="text-muted mb-0">
                Showing @Model.StartItem to @Model.EndItem of @Model.TotalItems FAQs
                @if (Model.HasFilters)
                {
                    <span>with applied filters</span>
                }
            </p>
        </div>
        <div class="col-md-6 text-end">
            <small class="text-muted">
                Page @Model.CurrentPage of @Model.TotalPages
            </small>
        </div>
    </div>
}

<!-- FAQ List -->
<div class="card">
    <div class="card-body">
        @if (Model.TotalItems > 0)
        {
            <div id="faqContainer" class="@(Model.SortBy == "displayOrder" ? "sortable-container" : "")">
                @foreach (var faq in Model.FAQs)
                {
                    <div class="faq-item border rounded mb-3 p-3" data-faq-id="@faq.Id" data-display-order="@faq.DisplayOrder">
                        <div class="row">
                            <div class="col-md-1 text-center">
                                <!-- Drag Handle (visible only when drag & drop is enabled) -->
                                <div class="drag-handle text-muted" style="display: none; cursor: move;">
                                    <i class="bi bi-grip-vertical fs-4"></i>
                                    <div class="small">@faq.DisplayOrder</div>
                                </div>
                                <!-- Order Input (visible when drag & drop is disabled) -->
                                <div class="order-input">
                                    <label class="form-label small">Order</label>
                                    <input type="number" class="form-control form-control-sm order-field" 
                                           value="@faq.DisplayOrder" data-faq-id="@faq.Id" min="0">
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h6 class="mb-1">
                                        <i class="bi bi-question-circle-fill text-primary me-1"></i>
                                        @faq.TruncatedQuestion
                                    </h6>
                                    <div class="d-flex gap-2">
                                        <!-- Status Badge -->
                                        <span class="badge bg-@faq.StatusCssClass">
                                            @faq.StatusDisplayName
                                        </span>
                                        <!-- Category Badge -->
                                        @if (!string.IsNullOrEmpty(faq.CategoryName))
                                        {
                                            <span class="badge bg-secondary">
                                                <i class="bi bi-tag"></i>
                                                @faq.CategoryName
                                            </span>
                                        }
                                        <!-- Helpfulness Badge -->
                                        <span class="badge bg-light text-dark">
                                            <i class="@faq.HelpfulnessIcon"></i>
                                            @faq.HelpfulnessScore
                                        </span>
                                    </div>
                                </div>
                                
                                <p class="text-muted mb-2">@faq.TruncatedAnswer</p>
                                
                                <!-- Tags -->
                                @if (faq.TagList.Any())
                                {
                                    <div class="mb-2">
                                        @foreach (var tag in faq.TagList.Take(3))
                                        {
                                            <span class="badge bg-light text-dark me-1">@tag</span>
                                        }
                                        @if (faq.TagList.Count > 3)
                                        {
                                            <span class="badge bg-light text-dark">+@(faq.TagList.Count - 3) more</span>
                                        }
                                    </div>
                                }
                                
                                <!-- Meta Information -->
                                <div class="row g-2 small text-muted">
                                    <div class="col-md-3">
                                        <i class="bi bi-person"></i>
                                        @(faq.Author ?? "Unknown")
                                    </div>
                                    <div class="col-md-3">
                                        <i class="bi bi-eye"></i>
                                        @faq.ViewCount views
                                    </div>
                                    <div class="col-md-3">
                                        <i class="bi bi-hand-thumbs-up"></i>
                                        @faq.HelpfulCount helpful
                                    </div>
                                    <div class="col-md-3">
                                        <i class="bi bi-calendar"></i>
                                        @faq.CreatedDate.ToString("MMM dd, yyyy")
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <!-- Quick Actions -->
                                <div class="btn-group-vertical w-100" role="group">
                                    <a asp-action="Details" asp-route-id="@faq.Id" 
                                       class="btn btn-sm btn-outline-info">
                                        <i class="bi bi-eye"></i>
                                        Details
                                    </a>
                                    <a asp-action="Edit" asp-route-id="@faq.Id" 
                                       class="btn btn-sm btn-outline-primary">
                                        <i class="bi bi-pencil"></i>
                                        Edit
                                    </a>
                                    <button class="btn btn-sm btn-outline-@(faq.IsActive ? "warning" : "success") toggle-status" 
                                            data-faq-id="@faq.Id" 
                                            title="@(faq.IsActive ? "Deactivate" : "Activate")">
                                        <i class="bi bi-@(faq.IsActive ? "pause" : "play")-fill"></i>
                                        @(faq.IsActive ? "Deactivate" : "Activate")
                                    </button>
                                    <a asp-action="Delete" asp-route-id="@faq.Id" 
                                       class="btn btn-sm btn-outline-danger">
                                        <i class="bi bi-trash"></i>
                                        Delete
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <nav aria-label="FAQ pagination" class="mt-4">
                    <ul class="pagination justify-content-center mb-0">
                        <!-- Previous Page -->
                        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                            <a class="page-link" 
                               asp-action="Index" 
                               asp-route-page="@(Model.CurrentPage - 1)" 
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-searchTerm="@Model.SearchTerm"
                               asp-route-categoryId="@Model.CategoryId"
                               asp-route-isActive="@Model.IsActive"
                               asp-route-tags="@Model.Tags"
                               asp-route-author="@Model.Author"
                               asp-route-sortBy="@Model.SortBy"
                               asp-route-sortOrder="@Model.SortOrder">
                                <i class="bi bi-chevron-left"></i>
                                Previous
                            </a>
                        </li>

                        <!-- Page Numbers -->
                        @{
                            var startPage = Math.Max(1, Model.CurrentPage - 2);
                            var endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                        }

                        @for (var i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" 
                                   asp-action="Index" 
                                   asp-route-page="@i" 
                                   asp-route-pageSize="@Model.PageSize"
                                   asp-route-searchTerm="@Model.SearchTerm"
                                   asp-route-categoryId="@Model.CategoryId"
                                   asp-route-isActive="@Model.IsActive"
                                   asp-route-tags="@Model.Tags"
                                   asp-route-author="@Model.Author"
                                   asp-route-sortBy="@Model.SortBy"
                                   asp-route-sortOrder="@Model.SortOrder">@i</a>
                            </li>
                        }

                        <!-- Next Page -->
                        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                            <a class="page-link" 
                               asp-action="Index" 
                               asp-route-page="@(Model.CurrentPage + 1)" 
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-searchTerm="@Model.SearchTerm"
                               asp-route-categoryId="@Model.CategoryId"
                               asp-route-isActive="@Model.IsActive"
                               asp-route-tags="@Model.Tags"
                               asp-route-author="@Model.Author"
                               asp-route-sortBy="@Model.SortBy"
                               asp-route-sortOrder="@Model.SortOrder">
                                Next
                                <i class="bi bi-chevron-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
            }
        }
        else
        {
            <!-- No Results -->
            <div class="text-center py-5">
                <i class="bi bi-question-circle display-1 text-muted"></i>
                <h4 class="mt-3">No FAQs found</h4>
                <p class="text-muted">
                    @if (Model.HasFilters)
                    {
                        <span>No FAQs match your search criteria.</span>
                        <br>
                        <a asp-action="Index" class="btn btn-link">Clear filters</a>
                        <span>to see all FAQs.</span>
                    }
                    else
                    {
                        <span>No FAQs have been created yet.</span>
                        <br>
                        <a asp-action="Create" class="btn btn-primary">Create first FAQ</a>
                    }
                </p>
            </div>
        }
    </div>
</div>

<!-- Statistics Modal -->
<div class="modal fade" id="statisticsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-bar-chart text-primary"></i>
                    FAQ Statistics
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <h6>Content Statistics</h6>
                        <dl class="row">
                            <dt class="col-sm-6">Total FAQs:</dt>
                            <dd class="col-sm-6">@Model.Statistics.TotalFAQs</dd>
                            
                            <dt class="col-sm-6">Active FAQs:</dt>
                            <dd class="col-sm-6">@Model.Statistics.ActiveFAQs</dd>
                            
                            <dt class="col-sm-6">Inactive FAQs:</dt>
                            <dd class="col-sm-6">@Model.Statistics.InactiveFAQs</dd>
                            
                            <dt class="col-sm-6">Categories:</dt>
                            <dd class="col-sm-6">@Model.Statistics.TotalCategories (@Model.Statistics.ActiveCategories active)</dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <h6>Engagement Statistics</h6>
                        <dl class="row">
                            <dt class="col-sm-6">Total Views:</dt>
                            <dd class="col-sm-6">@Model.Statistics.TotalViews</dd>
                            
                            <dt class="col-sm-6">Helpful Votes:</dt>
                            <dd class="col-sm-6">@Model.Statistics.TotalHelpfulVotes</dd>
                            
                            <dt class="col-sm-6">Unhelpful Votes:</dt>
                            <dd class="col-sm-6">@Model.Statistics.TotalNotHelpfulVotes</dd>
                            
                            @if (!string.IsNullOrEmpty(Model.Statistics.MostViewedFAQQuestion))
                            {
                                <dt class="col-sm-6">Most Viewed:</dt>
                                <dd class="col-sm-6">@Model.Statistics.MostViewedFAQQuestion (@Model.Statistics.MostViewedFAQViews views)</dd>
                            }
                            
                            @if (!string.IsNullOrEmpty(Model.Statistics.MostPopularCategoryName))
                            {
                                <dt class="col-sm-6">Popular Category:</dt>
                                <dd class="col-sm-6">@Model.Statistics.MostPopularCategoryName (@Model.Statistics.MostPopularCategoryCount FAQs)</dd>
                            }
                        </dl>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Sortable.js for drag and drop -->
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>
    
    <script>
        $(document).ready(function() {
            let sortable = null;

            // Auto-submit form when filters change
            $('#categoryId, #author, #isActive, #sortBy, #sortOrder, #pageSize').on('change', function() {
                $(this).closest('form').submit();
            });

            // Status toggle functionality
            $('.toggle-status').on('click', function() {
                const faqId = $(this).data('faq-id');
                const button = $(this);
                
                $.post('@Url.Action("ToggleStatus")', { id: faqId })
                    .done(function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert('Error: ' + response.message);
                        }
                    })
                    .fail(function() {
                        alert('Error updating FAQ status');
                    });
            });

            // Order input change functionality
            $('.order-field').on('change', function() {
                const faqId = $(this).data('faq-id');
                const newOrder = $(this).val();
                
                $.post('@Url.Action("UpdateOrder")', { id: faqId, newOrder: newOrder })
                    .done(function(response) {
                        if (response.success) {
                            showToast('Order updated successfully', 'success');
                        } else {
                            alert('Error: ' + response.message);
                        }
                    })
                    .fail(function() {
                        alert('Error updating FAQ order');
                    });
            });

            // Drag and drop toggle
            $('#enableDragDrop').on('change', function() {
                if ($(this).is(':checked')) {
                    enableDragDrop();
                } else {
                    disableDragDrop();
                }
            });

            // Enable drag and drop only for display order sorting
            if ('@Model.SortBy' === 'displayOrder') {
                $('#enableDragDrop').prop('disabled', false);
            } else {
                $('#enableDragDrop').prop('disabled', true);
                $('#enableDragDrop').prop('checked', false);
            }

            function enableDragDrop() {
                // Hide order inputs and show drag handles
                $('.order-input').hide();
                $('.drag-handle').show();
                
                // Initialize sortable
                const container = document.getElementById('faqContainer');
                if (container && !sortable) {
                    sortable = new Sortable(container, {
                        handle: '.drag-handle',
                        animation: 150,
                        onEnd: function(evt) {
                            updateOrdersAfterDrop();
                        }
                    });
                }
            }

            function disableDragDrop() {
                // Show order inputs and hide drag handles
                $('.drag-handle').hide();
                $('.order-input').show();
                
                // Destroy sortable
                if (sortable) {
                    sortable.destroy();
                    sortable = null;
                }
            }

            function updateOrdersAfterDrop() {
                const updates = [];
                $('.faq-item').each(function(index) {
                    const faqId = $(this).data('faq-id');
                    const newOrder = index + 1;
                    updates.push({
                        Id: faqId,
                        NewOrder: newOrder
                    });
                });

                $.ajax({
                    url: '@Url.Action("BulkUpdateOrders")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ Updates: updates }),
                    success: function(response) {
                        if (response.success) {
                            showToast('Orders updated successfully', 'success');
                            // Update order numbers in drag handles
                            $('.faq-item').each(function(index) {
                                $(this).find('.drag-handle .small').text(index + 1);
                            });
                        } else {
                            alert('Error: ' + response.message);
                            location.reload(); // Refresh to restore original order
                        }
                    },
                    error: function() {
                        alert('Error updating FAQ orders');
                        location.reload(); // Refresh to restore original order
                    }
                });
            }

            // Tag input autocomplete
            $('#tags').on('input', function() {
                const input = $(this);
                const val = input.val();
                const lastCommaIndex = val.lastIndexOf(',');
                const currentTag = lastCommaIndex >= 0 ? val.substring(lastCommaIndex + 1).trim() : val.trim();
                
                if (currentTag.length > 1) {
                    // You could implement a dropdown here with available tags
                    console.log('Tag suggestions for:', currentTag);
                }
            });

            function showToast(message, type) {
                // Simple toast notification
                const toast = $(`
                    <div class="toast align-items-center text-white bg-${type} border-0 position-fixed" 
                         style="top: 20px; right: 20px; z-index: 1050;" role="alert">
                        <div class="d-flex">
                            <div class="toast-body">${message}</div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" 
                                    data-bs-dismiss="toast"></button>
                        </div>
                    </div>
                `);
                
                $('body').append(toast);
                const toastEl = new bootstrap.Toast(toast[0]);
                toastEl.show();
                
                // Remove element after hiding
                toast.on('hidden.bs.toast', function() {
                    $(this).remove();
                });
            }
        });
    </script>

    <style>
        .faq-item {
            transition: all 0.2s ease-in-out;
        }
        
        .faq-item:hover {
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .sortable-container .faq-item {
            cursor: move;
        }
        
        .sortable-container .faq-item:hover {
            background-color: #f8f9fa;
        }
        
        .drag-handle {
            user-select: none;
        }
        
        .sortable-ghost {
            opacity: 0.4;
        }
        
        .order-field {
            width: 60px;
        }
    </style>
}

