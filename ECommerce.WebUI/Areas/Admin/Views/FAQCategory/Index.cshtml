@model FAQCategoryListViewModel
@{
    ViewData["Title"] = "FAQ Category Management";
}

<!-- Page Header -->
<div class="row mb-4">
    <div class="col-md-6">
        <h2 class="mb-0">
            <i class="bi bi-tags text-primary"></i>
            FAQ Category Management
        </h2>
        <p class="text-muted">Organize and manage FAQ categories for better content structure</p>
    </div>
    <div class="col-md-6 text-end">
        <div class="btn-group" role="group">
            <a asp-action="Create" class="btn btn-success">
                <i class="bi bi-plus-lg"></i>
                New Category
            </a>
            <a asp-controller="FAQ" asp-action="Index" class="btn btn-outline-primary">
                <i class="bi bi-question-circle"></i>
                Manage FAQs
            </a>
            <button type="button" class="btn btn-outline-info" data-bs-toggle="modal" data-bs-target="#statisticsModal">
                <i class="bi bi-bar-chart"></i>
                Statistics
            </button>
            <a asp-action="Export" class="btn btn-outline-secondary">
                <i class="bi bi-download"></i>
                Export
            </a>
        </div>
    </div>
</div>

<!-- Alert Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle-fill"></i>
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="bi bi-exclamation-triangle-fill"></i>
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Quick Statistics Cards -->
<div class="row mb-4">
    <div class="col-md-2">
        <div class="card text-center bg-primary text-white">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.TotalCategories</h5>
                <p class="card-text small mb-0">Total Categories</p>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card text-center bg-success text-white">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.ActiveCategories</h5>
                <p class="card-text small mb-0">Active</p>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card text-center bg-warning text-dark">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.InactiveCategories</h5>
                <p class="card-text small mb-0">Inactive</p>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card text-center bg-info text-white">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.CategorizedFAQs</h5>
                <p class="card-text small mb-0">Categorized FAQs</p>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card text-center bg-secondary text-white">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.UncategorizedFAQs</h5>
                <p class="card-text small mb-0">Uncategorized</p>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card text-center bg-dark text-white">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.CategoryUtilizationRate.ToString("F1")%</h5>
                <p class="card-text small mb-0">Utilization</p>
            </div>
        </div>
    </div>
</div>

<!-- Filters and Search -->
<div class="card mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-4">
                <label for="searchTerm" class="form-label">Search Categories</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-search"></i>
                    </span>
                    <input type="text" class="form-control" id="searchTerm" name="searchTerm" 
                           value="@Model.SearchTerm" placeholder="Name, description...">
                </div>
            </div>
            <div class="col-md-2">
                <label for="isActive" class="form-label">Status</label>
                <select class="form-select" id="isActive" name="isActive">
                    <option value="">All Status</option>
                    <option value="true" selected="@(Model.IsActive == true)">Active</option>
                    <option value="false" selected="@(Model.IsActive == false)">Inactive</option>
                </select>
            </div>
            <div class="col-md-2">
                <label for="sortBy" class="form-label">Sort By</label>
                <select class="form-select" id="sortBy" name="sortBy">
                    <option value="displayOrder" selected="@(Model.SortBy == "displayOrder")">Display Order</option>
                    <option value="name" selected="@(Model.SortBy == "name")">Name</option>
                    <option value="faqcount" selected="@(Model.SortBy == "faqcount")">FAQ Count</option>
                    <option value="createddate" selected="@(Model.SortBy == "createddate")">Created Date</option>
                </select>
            </div>
            <div class="col-md-2">
                <label for="sortOrder" class="form-label">Order</label>
                <select class="form-select" id="sortOrder" name="sortOrder">
                    <option value="asc" selected="@(Model.SortOrder == "asc")">Ascending</option>
                    <option value="desc" selected="@(Model.SortOrder == "desc")">Descending</option>
                </select>
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <div class="btn-group w-100" role="group">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-funnel"></i>
                        Filter
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-clockwise"></i>
                        Reset
                    </a>
                </div>
            </div>
        </form>
        
        <div class="row mt-3">
            <div class="col-md-12">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="enableDragDrop">
                    <label class="form-check-label" for="enableDragDrop">
                        <i class="bi bi-arrows-move"></i>
                        Enable Drag & Drop Ordering
                    </label>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Active Filters Display -->
@if (Model.HasFilters)
{
    <div class="row mb-3">
        <div class="col-md-12">
            <div class="d-flex flex-wrap gap-2 align-items-center">
                <span class="text-muted">Active filters:</span>
                @if (!string.IsNullOrEmpty(Model.SearchTerm))
                {
                    <span class="badge bg-primary">
                        Search: "@Model.SearchTerm"
                        <a asp-action="Index" asp-route-isActive="@Model.IsActive" asp-route-sortBy="@Model.SortBy" asp-route-sortOrder="@Model.SortOrder" class="text-white ms-1">×</a>
                    </span>
                }
                @if (Model.IsActive.HasValue)
                {
                    <span class="badge bg-info">
                        Status: @(Model.IsActive.Value ? "Active" : "Inactive")
                        <a asp-action="Index" asp-route-searchTerm="@Model.SearchTerm" asp-route-sortBy="@Model.SortBy" asp-route-sortOrder="@Model.SortOrder" class="text-white ms-1">×</a>
                    </span>
                }
                <a asp-action="Index" class="btn btn-sm btn-outline-secondary">Clear All Filters</a>
            </div>
        </div>
    </div>
}

<!-- Category List -->
<div class="card">
    <div class="card-body">
        @if (Model.Categories.Any())
        {
            <div id="categoryContainer" class="@(Model.SortBy == "displayOrder" ? "sortable-container" : "")">
                @foreach (var category in Model.Categories)
                {
                    <div class="category-item border rounded mb-3 p-3" data-category-id="@category.Id" data-display-order="@category.DisplayOrder">
                        <div class="row align-items-center">
                            <!-- Drag Handle -->
                            <div class="col-md-1 text-center">
                                <div class="drag-handle text-muted" style="display: none; cursor: move;">
                                    <i class="bi bi-grip-vertical fs-4"></i>
                                    <div class="small">@category.DisplayOrder</div>
                                </div>
                                <div class="order-input">
                                    <label class="form-label small">Order</label>
                                    <input type="number" class="form-control form-control-sm order-field" 
                                           value="@category.DisplayOrder" data-category-id="@category.Id" min="0">
                                </div>
                            </div>

                            <!-- Category Icon -->
                            <div class="col-md-1 text-center">
                                <div class="category-icon-display">
                                    @if (!string.IsNullOrEmpty(category.Icon))
                                    {
                                        @if (category.Icon.StartsWith("bi "))
                                        {
                                            <i class="@category.Icon fs-2 text-primary"></i>
                                        }
                                        else
                                        {
                                            <img src="@category.Icon" alt="@category.Name" class="category-icon-img" style="width: 32px; height: 32px; object-fit: cover;">
                                        }
                                    }
                                    else
                                    {
                                        <i class="bi bi-tag fs-2 text-muted"></i>
                                    }
                                </div>
                            </div>

                            <!-- Category Information -->
                            <div class="col-md-7">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h6 class="mb-1">
                                        <i class="@category.DisplayIcon text-primary me-1"></i>
                                        @category.Name
                                    </h6>
                                    <div class="d-flex gap-2">
                                        <span class="badge bg-@category.StatusCssClass">
                                            @category.StatusDisplayName
                                        </span>
                                        <span class="badge bg-secondary">
                                            @category.FAQCount FAQs
                                        </span>
                                        <span class="badge bg-light text-dark">
                                            @category.EfficiencyRate Efficiency
                                        </span>
                                    </div>
                                </div>
                                
                                @if (!string.IsNullOrEmpty(category.Description))
                                {
                                    <p class="text-muted mb-2">@category.TruncatedDescription</p>
                                }
                                
                                <!-- Meta Information -->
                                <div class="row g-2 small text-muted">
                                    <div class="col-md-3">
                                        <i class="bi bi-list-ul"></i>
                                        @category.ActiveFAQCount active FAQs
                                    </div>
                                    <div class="col-md-3">
                                        <i class="bi bi-sort-numeric-up"></i>
                                        Order: @category.DisplayOrder
                                    </div>
                                    <div class="col-md-3">
                                        <i class="bi bi-calendar"></i>
                                        @category.CreatedDate.ToString("MMM dd, yyyy")
                                    </div>
                                    <div class="col-md-3">
                                        @if (category.UpdatedDate.HasValue)
                                        {
                                            <i class="bi bi-clock"></i>
                                            <span>Updated @category.UpdatedDate.Value.ToString("MMM dd")</span>
                                        }
                                        else
                                        {
                                            <i class="bi bi-clock-history"></i>
                                            <span>Never updated</span>
                                        }
                                    </div>
                                </div>
                            </div>

                            <!-- Quick Actions -->
                            <div class="col-md-3">
                                <div class="btn-group-vertical w-100" role="group">
                                    <a asp-action="Details" asp-route-id="@category.Id" 
                                       class="btn btn-sm btn-outline-info">
                                        <i class="bi bi-eye"></i>
                                        Details
                                    </a>
                                    <a asp-action="Edit" asp-route-id="@category.Id" 
                                       class="btn btn-sm btn-outline-primary">
                                        <i class="bi bi-pencil"></i>
                                        Edit
                                    </a>
                                    <button class="btn btn-sm btn-outline-@(category.IsActive ? "warning" : "success") toggle-status" 
                                            data-category-id="@category.Id" 
                                            title="@(category.IsActive ? "Deactivate" : "Activate")">
                                        <i class="bi bi-@(category.IsActive ? "pause" : "play")-fill"></i>
                                        @(category.IsActive ? "Deactivate" : "Activate")
                                    </button>
                                    <a asp-controller="FAQ" asp-action="Index" asp-route-categoryId="@category.Id" 
                                       class="btn btn-sm btn-outline-secondary">
                                        <i class="bi bi-question-circle"></i>
                                        View FAQs (@category.FAQCount)
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@category.Id" 
                                       class="btn btn-sm btn-outline-danger">
                                        <i class="bi bi-trash"></i>
                                        Delete
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <!-- No Results -->
            <div class="text-center py-5">
                <i class="bi bi-tags display-1 text-muted"></i>
                <h4 class="mt-3">No Categories Found</h4>
                @if (Model.HasFilters)
                {
                    <p class="text-muted">
                        No categories match your search criteria.
                        <br>
                        <a asp-action="Index" class="btn btn-link">Clear filters</a>
                        to see all categories.
                    </p>
                }
                else
                {
                    <p class="text-muted">
                        No FAQ categories have been created yet.
                        <br>
                        <a asp-action="Create" class="btn btn-primary">Create first category</a>
                    </p>
                }
            </div>
        }
    </div>
</div>

<!-- Statistics Modal -->
<div class="modal fade" id="statisticsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-bar-chart text-primary"></i>
                    FAQ Category Statistics
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <h6>Category Statistics</h6>
                        <dl class="row">
                            <dt class="col-sm-6">Total Categories:</dt>
                            <dd class="col-sm-6">@Model.Statistics.TotalCategories</dd>
                            
                            <dt class="col-sm-6">Active Categories:</dt>
                            <dd class="col-sm-6">@Model.Statistics.ActiveCategories</dd>
                            
                            <dt class="col-sm-6">Inactive Categories:</dt>
                            <dd class="col-sm-6">@Model.Statistics.InactiveCategories</dd>
                            
                            <dt class="col-sm-6">Utilization Rate:</dt>
                            <dd class="col-sm-6">@Model.Statistics.CategoryUtilizationRate.ToString("F1")%</dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <h6>FAQ Distribution</h6>
                        <dl class="row">
                            <dt class="col-sm-6">Total FAQs:</dt>
                            <dd class="col-sm-6">@Model.Statistics.TotalFAQs</dd>
                            
                            <dt class="col-sm-6">Categorized FAQs:</dt>
                            <dd class="col-sm-6">@Model.Statistics.CategorizedFAQs</dd>
                            
                            <dt class="col-sm-6">Uncategorized FAQs:</dt>
                            <dd class="col-sm-6">@Model.Statistics.UncategorizedFAQs</dd>
                            
                            <dt class="col-sm-6">Avg per Category:</dt>
                            <dd class="col-sm-6">@Model.Statistics.AverageFAQsPerCategory.ToString("F1")</dd>
                        </dl>
                        
                        @if (!string.IsNullOrEmpty(Model.Statistics.MostPopularCategoryName))
                        {
                            <h6>Most Popular Category</h6>
                            <p class="mb-1">
                                <strong>@Model.Statistics.MostPopularCategoryName</strong>
                                <br>
                                <small class="text-muted">@Model.Statistics.MostPopularCategoryFAQCount FAQs</small>
                            </p>
                        }
                    </div>
                </div>
                
                @if (Model.Statistics.LastUpdated.HasValue)
                {
                    <hr>
                    <div class="text-center">
                        <small class="text-muted">
                            Statistics last updated: @Model.Statistics.LastUpdated.Value.ToString("MMMM dd, yyyy 'at' hh:mm tt")
                        </small>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Sortable.js for drag and drop -->
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>
    
    <script>
        $(document).ready(function() {
            let sortable = null;

            // Auto-submit form when filters change
            $('#isActive, #sortBy, #sortOrder').on('change', function() {
                $(this).closest('form').submit();
            });

            // Status toggle functionality
            $('.toggle-status').on('click', function() {
                const categoryId = $(this).data('category-id');
                const button = $(this);
                
                $.post('@Url.Action("ToggleStatus")', { id: categoryId })
                    .done(function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert('Error: ' + response.message);
                        }
                    })
                    .fail(function() {
                        alert('Error updating category status');
                    });
            });

            // Order input change functionality
            $('.order-field').on('change', function() {
                const categoryId = $(this).data('category-id');
                const newOrder = $(this).val();
                
                $.post('@Url.Action("UpdateOrder")', { id: categoryId, newOrder: newOrder })
                    .done(function(response) {
                        if (response.success) {
                            showToast('Order updated successfully', 'success');
                        } else {
                            alert('Error: ' + response.message);
                        }
                    })
                    .fail(function() {
                        alert('Error updating category order');
                    });
            });

            // Drag and drop toggle
            $('#enableDragDrop').on('change', function() {
                if ($(this).is(':checked')) {
                    enableDragDrop();
                } else {
                    disableDragDrop();
                }
            });

            // Enable drag and drop only for display order sorting
            if ('@Model.SortBy' === 'displayOrder') {
                $('#enableDragDrop').prop('disabled', false);
            } else {
                $('#enableDragDrop').prop('disabled', true);
                $('#enableDragDrop').prop('checked', false);
            }

            function enableDragDrop() {
                // Hide order inputs and show drag handles
                $('.order-input').hide();
                $('.drag-handle').show();
                
                // Initialize sortable
                const container = document.getElementById('categoryContainer');
                if (container && !sortable) {
                    sortable = new Sortable(container, {
                        handle: '.drag-handle',
                        animation: 150,
                        onEnd: function(evt) {
                            updateOrdersAfterDrop();
                        }
                    });
                }
            }

            function disableDragDrop() {
                // Show order inputs and hide drag handles
                $('.drag-handle').hide();
                $('.order-input').show();
                
                // Destroy sortable
                if (sortable) {
                    sortable.destroy();
                    sortable = null;
                }
            }

            function updateOrdersAfterDrop() {
                const updates = [];
                $('.category-item').each(function(index) {
                    const categoryId = $(this).data('category-id');
                    const newOrder = index + 1;
                    updates.push({
                        Id: categoryId,
                        NewOrder: newOrder
                    });
                });

                $.ajax({
                    url: '@Url.Action("BulkUpdateOrders")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ Updates: updates }),
                    success: function(response) {
                        if (response.success) {
                            showToast('Orders updated successfully', 'success');
                            // Update order numbers in drag handles
                            $('.category-item').each(function(index) {
                                $(this).find('.drag-handle .small').text(index + 1);
                            });
                        } else {
                            alert('Error: ' + response.message);
                            location.reload(); // Refresh to restore original order
                        }
                    },
                    error: function() {
                        alert('Error updating category orders');
                        location.reload(); // Refresh to restore original order
                    }
                });
            }

            function showToast(message, type) {
                // Simple toast notification
                const toast = $(`
                    <div class="toast align-items-center text-white bg-${type} border-0 position-fixed" 
                         style="top: 20px; right: 20px; z-index: 1050;" role="alert">
                        <div class="d-flex">
                            <div class="toast-body">${message}</div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" 
                                    data-bs-dismiss="toast"></button>
                        </div>
                    </div>
                `);
                
                $('body').append(toast);
                const toastEl = new bootstrap.Toast(toast[0]);
                toastEl.show();
                
                // Remove element after hiding
                toast.on('hidden.bs.toast', function() {
                    $(this).remove();
                });
            }
        });
    </script>

    <style>
        .category-item {
            transition: all 0.2s ease-in-out;
        }
        
        .category-item:hover {
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .sortable-container .category-item {
            cursor: move;
        }
        
        .sortable-container .category-item:hover {
            background-color: #f8f9fa;
        }
        
        .drag-handle {
            user-select: none;
        }
        
        .sortable-ghost {
            opacity: 0.4;
        }
        
        .order-field {
            width: 60px;
        }
        
        .category-icon-img {
            border-radius: 0.375rem;
            border: 1px solid #dee2e6;
        }
        
        .category-icon-display {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 48px;
            height: 48px;
        }
    </style>
}


