@model PaymentListViewModel
@{
    ViewData["Title"] = "Payment Management";
}

<!-- Page Header -->
<div class="row mb-4">
    <div class="col-md-8">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a asp-area="Admin" asp-controller="Dashboard" asp-action="Index">Dashboard</a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">Payments</li>
            </ol>
        </nav>
        <h2 class="mb-0">
            <i class="bi bi-credit-card text-primary"></i>
            Payment Management
        </h2>
        <p class="text-muted">Monitor and manage payment transactions</p>
    </div>
    <div class="col-md-4 text-end">
        <div class="btn-group" role="group">
            <a asp-action="Create" class="btn btn-success">
                <i class="bi bi-plus-circle"></i>
                New Payment
            </a>
            <a asp-action="Export" class="btn btn-outline-info" 
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-userId="@Model.UserId"
               asp-route-orderId="@Model.OrderId"
               asp-route-paymentMethod="@Model.PaymentMethod"
               asp-route-paymentStatus="@Model.PaymentStatus"
               asp-route-startDate="@Model.StartDate"
               asp-route-endDate="@Model.EndDate">
                <i class="bi bi-download"></i>
                Export CSV
            </a>
        </div>
    </div>
</div>

<!-- Statistics Cards -->
<div class="row mb-4">
    <div class="col-md-2">
        <div class="card card-stats bg-gradient-primary text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="stats-icon bg-white text-primary">
                        <i class="bi bi-credit-card-fill"></i>
                    </div>
                    <div class="ms-3">
                        <h4 class="mb-0">@Model.Statistics.TotalPayments</h4>
                        <p class="mb-0 small">Total Payments</p>
                        <small>@Model.Statistics.FormattedTotalAmount</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card card-stats bg-gradient-warning text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="stats-icon bg-white text-warning">
                        <i class="bi bi-clock-fill"></i>
                    </div>
                    <div class="ms-3">
                        <h4 class="mb-0">@Model.Statistics.PendingPayments</h4>
                        <p class="mb-0 small">Pending</p>
                        <small>@Model.Statistics.FormattedPendingAmount</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card card-stats bg-gradient-success text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="stats-icon bg-white text-success">
                        <i class="bi bi-check-circle-fill"></i>
                    </div>
                    <div class="ms-3">
                        <h4 class="mb-0">@Model.Statistics.CompletedPayments</h4>
                        <p class="mb-0 small">Completed</p>
                        <small>@Model.Statistics.FormattedCompletedAmount</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card card-stats bg-gradient-danger text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="stats-icon bg-white text-danger">
                        <i class="bi bi-x-circle-fill"></i>
                    </div>
                    <div class="ms-3">
                        <h4 class="mb-0">@Model.Statistics.FailedPayments</h4>
                        <p class="mb-0 small">Failed</p>
                        <small>@Model.Statistics.FormattedFailedAmount</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card card-stats bg-gradient-info text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="stats-icon bg-white text-info">
                        <i class="bi bi-arrow-counterclockwise"></i>
                    </div>
                    <div class="ms-3">
                        <h4 class="mb-0">@Model.Statistics.RefundedPayments</h4>
                        <p class="mb-0 small">Refunded</p>
                        <small>@Model.Statistics.FormattedRefundedAmount</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="card card-stats bg-gradient-secondary text-white">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="stats-icon bg-white text-secondary">
                        <i class="bi bi-calendar-day"></i>
                    </div>
                    <div class="ms-3">
                        <h4 class="mb-0">@Model.Statistics.TodayPayments</h4>
                        <p class="mb-0 small">Today</p>
                        <small>@Model.Statistics.FormattedTodayAmount</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Summary Cards (Filtered Results) -->
@if (Model.HasFilters && Model.Summary.Count > 0)
{
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h6 class="card-title mb-0">
                        <i class="bi bi-funnel text-primary"></i>
                        Filtered Results Summary
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="text-center">
                                <h5 class="text-primary mb-0">@Model.Summary.Count</h5>
                                <small class="text-muted">Payments</small>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <h5 class="text-success mb-0">@Model.Summary.FormattedTotalAmount</h5>
                                <small class="text-muted">Total Amount</small>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <h5 class="text-info mb-0">@Model.Summary.FormattedAverageAmount</h5>
                                <small class="text-muted">Average</small>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <h5 class="text-warning mb-0">@Model.Summary.FormattedMaxAmount</h5>
                                <small class="text-muted">Largest</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<!-- Alert Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle-fill"></i>
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="bi bi-exclamation-triangle-fill"></i>
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Filters -->
<div class="card mb-4">
    <div class="card-header">
        <h5 class="card-title mb-0">
            <i class="bi bi-funnel text-primary"></i>
            Search & Filter
            @if (Model.HasFilters)
            {
                <span class="badge bg-primary ms-2">Active</span>
            }
        </h5>
    </div>
    <div class="card-body">
        <form method="get" asp-action="Index">
            <div class="row">
                <div class="col-md-3">
                    <label for="searchTerm" class="form-label">Search</label>
                    <input asp-for="SearchTerm" class="form-control" placeholder="Transaction ID, email, order...">
                </div>
                <div class="col-md-2">
                    <label for="userId" class="form-label">User</label>
                    <select asp-for="UserId" class="form-select" asp-items="Model.UserOptions">
                        <option value="">All Users</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label for="orderId" class="form-label">Order</label>
                    <select asp-for="OrderId" class="form-select" asp-items="Model.OrderOptions">
                        <option value="">All Orders</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label for="paymentMethod" class="form-label">Method</label>
                    <select asp-for="PaymentMethod" class="form-select" asp-items="Model.PaymentMethodOptions">
                        <option value="">All Methods</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label for="paymentStatus" class="form-label">Status</label>
                    <select asp-for="PaymentStatus" class="form-select" asp-items="Model.PaymentStatusOptions">
                        <option value="">All Statuses</option>
                    </select>
                </div>
                <div class="col-md-1">
                    <label class="form-label">&nbsp;</label>
                    <button type="submit" class="btn btn-primary d-block w-100">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </div>
            <div class="row mt-3">
                <div class="col-md-2">
                    <label for="startDate" class="form-label">Start Date</label>
                    <input asp-for="StartDate" type="date" class="form-control">
                </div>
                <div class="col-md-2">
                    <label for="endDate" class="form-label">End Date</label>
                    <input asp-for="EndDate" type="date" class="form-control">
                </div>
                <div class="col-md-2">
                    <label for="pageSize" class="form-label">Items per page</label>
                    <select asp-for="PageSize" class="form-select">
                        <option value="10">10</option>
                        <option value="20">20</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                    </select>
                </div>
                <div class="col-md-6 d-flex align-items-end">
                    @if (Model.HasFilters)
                    {
                        <a asp-action="Index" class="btn btn-outline-secondary me-2">
                            <i class="bi bi-x-circle"></i>
                            Clear Filters
                        </a>
                    }
                    <button type="submit" class="btn btn-success">
                        <i class="bi bi-funnel"></i>
                        Apply Filters
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Payments Table -->
<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="card-title mb-0">
            <i class="bi bi-list-ul text-primary"></i>
            Payments (@Model.TotalItems total)
        </h5>
    </div>
    <div class="card-body p-0">
        @if (Model.Payments.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>
                                <a asp-action="Index" asp-route-sortBy="id" asp-route-sortOrder="@Model.GetNextSortOrder("id")"
                                   asp-route-searchTerm="@Model.SearchTerm" asp-route-userId="@Model.UserId" 
                                   asp-route-orderId="@Model.OrderId" asp-route-paymentMethod="@Model.PaymentMethod"
                                   asp-route-paymentStatus="@Model.PaymentStatus" asp-route-startDate="@Model.StartDate" 
                                   asp-route-endDate="@Model.EndDate" asp-route-page="@Model.CurrentPage" 
                                   asp-route-pageSize="@Model.PageSize" class="text-decoration-none">
                                    ID <i class="bi @Model.GetSortIcon("id")"></i>
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortBy="user" asp-route-sortOrder="@Model.GetNextSortOrder("user")"
                                   asp-route-searchTerm="@Model.SearchTerm" asp-route-userId="@Model.UserId" 
                                   asp-route-orderId="@Model.OrderId" asp-route-paymentMethod="@Model.PaymentMethod"
                                   asp-route-paymentStatus="@Model.PaymentStatus" asp-route-startDate="@Model.StartDate" 
                                   asp-route-endDate="@Model.EndDate" asp-route-page="@Model.CurrentPage" 
                                   asp-route-pageSize="@Model.PageSize" class="text-decoration-none">
                                    User <i class="bi @Model.GetSortIcon("user")"></i>
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortBy="order" asp-route-sortOrder="@Model.GetNextSortOrder("order")"
                                   asp-route-searchTerm="@Model.SearchTerm" asp-route-userId="@Model.UserId" 
                                   asp-route-orderId="@Model.OrderId" asp-route-paymentMethod="@Model.PaymentMethod"
                                   asp-route-paymentStatus="@Model.PaymentStatus" asp-route-startDate="@Model.StartDate" 
                                   asp-route-endDate="@Model.EndDate" asp-route-page="@Model.CurrentPage" 
                                   asp-route-pageSize="@Model.PageSize" class="text-decoration-none">
                                    Order <i class="bi @Model.GetSortIcon("order")"></i>
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortBy="amount" asp-route-sortOrder="@Model.GetNextSortOrder("amount")"
                                   asp-route-searchTerm="@Model.SearchTerm" asp-route-userId="@Model.UserId" 
                                   asp-route-orderId="@Model.OrderId" asp-route-paymentMethod="@Model.PaymentMethod"
                                   asp-route-paymentStatus="@Model.PaymentStatus" asp-route-startDate="@Model.StartDate" 
                                   asp-route-endDate="@Model.EndDate" asp-route-page="@Model.CurrentPage" 
                                   asp-route-pageSize="@Model.PageSize" class="text-decoration-none">
                                    Amount <i class="bi @Model.GetSortIcon("amount")"></i>
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortBy="method" asp-route-sortOrder="@Model.GetNextSortOrder("method")"
                                   asp-route-searchTerm="@Model.SearchTerm" asp-route-userId="@Model.UserId" 
                                   asp-route-orderId="@Model.OrderId" asp-route-paymentMethod="@Model.PaymentMethod"
                                   asp-route-paymentStatus="@Model.PaymentStatus" asp-route-startDate="@Model.StartDate" 
                                   asp-route-endDate="@Model.EndDate" asp-route-page="@Model.CurrentPage" 
                                   asp-route-pageSize="@Model.PageSize" class="text-decoration-none">
                                    Method <i class="bi @Model.GetSortIcon("method")"></i>
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortBy="status" asp-route-sortOrder="@Model.GetNextSortOrder("status")"
                                   asp-route-searchTerm="@Model.SearchTerm" asp-route-userId="@Model.UserId" 
                                   asp-route-orderId="@Model.OrderId" asp-route-paymentMethod="@Model.PaymentMethod"
                                   asp-route-paymentStatus="@Model.PaymentStatus" asp-route-startDate="@Model.StartDate" 
                                   asp-route-endDate="@Model.EndDate" asp-route-page="@Model.CurrentPage" 
                                   asp-route-pageSize="@Model.PageSize" class="text-decoration-none">
                                    Status <i class="bi @Model.GetSortIcon("status")"></i>
                                </a>
                            </th>
                            <th>
                                <a asp-action="Index" asp-route-sortBy="paymentDate" asp-route-sortOrder="@Model.GetNextSortOrder("paymentDate")"
                                   asp-route-searchTerm="@Model.SearchTerm" asp-route-userId="@Model.UserId" 
                                   asp-route-orderId="@Model.OrderId" asp-route-paymentMethod="@Model.PaymentMethod"
                                   asp-route-paymentStatus="@Model.PaymentStatus" asp-route-startDate="@Model.StartDate" 
                                   asp-route-endDate="@Model.EndDate" asp-route-page="@Model.CurrentPage" 
                                   asp-route-pageSize="@Model.PageSize" class="text-decoration-none">
                                    Date <i class="bi @Model.GetSortIcon("paymentDate")"></i>
                                </a>
                            </th>
                            <th width="180">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var payment in Model.Payments)
                        {
                            <tr class="@(payment.PaymentStatus == PaymentStatus.Failed ? "table-danger" : payment.PaymentStatus == PaymentStatus.Refunded ? "table-warning" : "")" 
                                data-payment-id="@payment.Id">
                                <td>
                                    <strong>#@payment.Id</strong>
                                    @if (!string.IsNullOrEmpty(payment.TransactionId))
                                    {
                                        <br><small class="text-muted">@payment.TransactionId</small>
                                    }
                                </td>
                                <td>
                                    <div>
                                        <strong>@payment.UserName</strong>
                                        <br><small class="text-muted">@payment.UserEmail</small>
                                    </div>
                                </td>
                                <td>
                                    <a asp-controller="Order" asp-action="Details" asp-route-id="@payment.OrderId" 
                                       class="text-decoration-none">
                                        <strong>@payment.OrderNumber</strong>
                                        <br><small class="text-muted">Order #@payment.OrderId</small>
                                    </a>
                                </td>
                                <td>
                                    <h6 class="mb-0 text-success">@payment.FormattedAmount</h6>
                                    <small class="text-muted">@payment.Currency</small>
                                </td>
                                <td>
                                    <span class="d-inline-flex align-items-center">
                                        <i class="bi @payment.PaymentMethodIcon me-1"></i>
                                        @payment.PaymentMethodDisplayName
                                    </span>
                                    @if (!string.IsNullOrEmpty(payment.PaymentGateway))
                                    {
                                        <br><small class="text-muted">@payment.PaymentGateway</small>
                                    }
                                </td>
                                <td>
                                    <div class="dropdown">
                                        <button class="btn btn-outline-@payment.PaymentStatusCssClass btn-sm dropdown-toggle" 
                                                type="button" data-bs-toggle="dropdown">
                                            <i class="bi @payment.PaymentStatusIcon"></i>
                                            @payment.PaymentStatusDisplayName
                                        </button>
                                        <ul class="dropdown-menu">
                                            @if (payment.PaymentStatus != PaymentStatus.Pending)
                                            {
                                                <li><a class="dropdown-item change-status" href="#" 
                                                       data-payment-id="@payment.Id" data-status="@((int)PaymentStatus.Pending)">
                                                    <i class="bi bi-clock"></i> Mark Pending
                                                </a></li>
                                            }
                                            @if (payment.PaymentStatus != PaymentStatus.Completed)
                                            {
                                                <li><a class="dropdown-item change-status" href="#" 
                                                       data-payment-id="@payment.Id" data-status="@((int)PaymentStatus.Completed)">
                                                    <i class="bi bi-check-circle"></i> Mark Completed
                                                </a></li>
                                            }
                                            @if (payment.PaymentStatus != PaymentStatus.Failed)
                                            {
                                                <li><a class="dropdown-item change-status" href="#" 
                                                       data-payment-id="@payment.Id" data-status="@((int)PaymentStatus.Failed)">
                                                    <i class="bi bi-x-circle"></i> Mark Failed
                                                </a></li>
                                            }
                                            @if (payment.PaymentStatus == PaymentStatus.Completed)
                                            {
                                                <li><hr class="dropdown-divider"></li>
                                                <li><a class="dropdown-item process-refund" href="#" 
                                                       data-payment-id="@payment.Id" data-amount="@payment.Amount">
                                                    <i class="bi bi-arrow-counterclockwise"></i> Process Refund
                                                </a></li>
                                            }
                                        </ul>
                                    </div>
                                </td>
                                <td>
                                    <div class="small">
                                        @payment.PaymentDate.ToString("MMM dd, yyyy")
                                        <br>
                                        <span class="text-muted">@payment.TimeAgo</span>
                                    </div>
                                </td>
                                <td>
                                    <div class="btn-group btn-group-sm" role="group">
                                        <a asp-action="Details" asp-route-id="@payment.Id" 
                                           class="btn btn-outline-info" title="View Details">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@payment.Id" 
                                           class="btn btn-outline-warning" title="Edit">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@payment.Id" 
                                           class="btn btn-outline-danger" title="Delete">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <div class="card-footer">
                    <nav aria-label="Payments pagination">
                        <ul class="pagination pagination-sm justify-content-center mb-0">
                            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)"
                                   asp-route-searchTerm="@Model.SearchTerm" asp-route-userId="@Model.UserId" 
                                   asp-route-orderId="@Model.OrderId" asp-route-paymentMethod="@Model.PaymentMethod"
                                   asp-route-paymentStatus="@Model.PaymentStatus" asp-route-startDate="@Model.StartDate" 
                                   asp-route-endDate="@Model.EndDate" asp-route-sortBy="@Model.SortBy" 
                                   asp-route-sortOrder="@Model.SortOrder" asp-route-pageSize="@Model.PageSize">
                                    <i class="bi bi-chevron-left"></i>
                                </a>
                            </li>

                            @{
                                var startPage = Math.Max(1, Model.CurrentPage - 2);
                                var endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                            }

                            @if (startPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-action="Index" asp-route-page="1"
                                       asp-route-searchTerm="@Model.SearchTerm" asp-route-userId="@Model.UserId" 
                                       asp-route-orderId="@Model.OrderId" asp-route-paymentMethod="@Model.PaymentMethod"
                                       asp-route-paymentStatus="@Model.PaymentStatus" asp-route-startDate="@Model.StartDate" 
                                       asp-route-endDate="@Model.EndDate" asp-route-sortBy="@Model.SortBy" 
                                       asp-route-sortOrder="@Model.SortOrder" asp-route-pageSize="@Model.PageSize">1</a>
                                </li>
                                @if (startPage > 2)
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link">...</span>
                                    </li>
                                }
                            }

                            @for (int i = startPage; i <= endPage; i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" asp-action="Index" asp-route-page="@i"
                                       asp-route-searchTerm="@Model.SearchTerm" asp-route-userId="@Model.UserId" 
                                       asp-route-orderId="@Model.OrderId" asp-route-paymentMethod="@Model.PaymentMethod"
                                       asp-route-paymentStatus="@Model.PaymentStatus" asp-route-startDate="@Model.StartDate" 
                                       asp-route-endDate="@Model.EndDate" asp-route-sortBy="@Model.SortBy" 
                                       asp-route-sortOrder="@Model.SortOrder" asp-route-pageSize="@Model.PageSize">@i</a>
                                </li>
                            }

                            @if (endPage < Model.TotalPages)
                            {
                                @if (endPage < Model.TotalPages - 1)
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link">...</span>
                                    </li>
                                }
                                <li class="page-item">
                                    <a class="page-link" asp-action="Index" asp-route-page="@Model.TotalPages"
                                       asp-route-searchTerm="@Model.SearchTerm" asp-route-userId="@Model.UserId" 
                                       asp-route-orderId="@Model.OrderId" asp-route-paymentMethod="@Model.PaymentMethod"
                                       asp-route-paymentStatus="@Model.PaymentStatus" asp-route-startDate="@Model.StartDate" 
                                       asp-route-endDate="@Model.EndDate" asp-route-sortBy="@Model.SortBy" 
                                       asp-route-sortOrder="@Model.SortOrder" asp-route-pageSize="@Model.PageSize">@Model.TotalPages</a>
                                </li>
                            }

                            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)"
                                   asp-route-searchTerm="@Model.SearchTerm" asp-route-userId="@Model.UserId" 
                                   asp-route-orderId="@Model.OrderId" asp-route-paymentMethod="@Model.PaymentMethod"
                                   asp-route-paymentStatus="@Model.PaymentStatus" asp-route-startDate="@Model.StartDate" 
                                   asp-route-endDate="@Model.EndDate" asp-route-sortBy="@Model.SortBy" 
                                   asp-route-sortOrder="@Model.SortOrder" asp-route-pageSize="@Model.PageSize">
                                    <i class="bi bi-chevron-right"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>
                    <div class="text-center mt-2">
                        <small class="text-muted">
                            Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) to @Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalItems) 
                            of @Model.TotalItems payments
                        </small>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="text-center py-5">
                <i class="bi bi-credit-card-2-front text-muted" style="font-size: 3rem;"></i>
                <h5 class="text-muted mt-3">No payments found</h5>
                <p class="text-muted">
                    @if (Model.HasFilters)
                    {
                        <span>Try adjusting your filters or </span>
                        <a asp-action="Index" class="text-decoration-none">clear all filters</a>
                    }
                    else
                    {
                        <span>No payments have been processed yet.</span>
                    }
                </p>
                @if (!Model.HasFilters)
                {
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="bi bi-plus-circle"></i>
                        Create First Payment
                    </a>
                }
            </div>
        }
    </div>
</div>

<!-- Refund Modal -->
<div class="modal fade" id="refundModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Process Refund</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="refundForm">
                    <input type="hidden" id="refundPaymentId">
                    <div class="mb-3">
                        <label for="refundAmount" class="form-label">Refund Amount</label>
                        <input type="number" class="form-control" id="refundAmount" step="0.01" min="0" required>
                        <div class="form-text">Maximum: $<span id="maxRefundAmount"></span></div>
                    </div>
                    <div class="mb-3">
                        <label for="refundReason" class="form-label">Reason</label>
                        <textarea class="form-control" id="refundReason" rows="3" required
                                  placeholder="Explain the reason for this refund..."></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmRefund">Process Refund</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Status change handlers
            $('.change-status').on('click', function(e) {
                e.preventDefault();
                
                const paymentId = $(this).data('payment-id');
                const newStatus = $(this).data('status');
                const statusText = $(this).text().trim();
                
                if (confirm(`Are you sure you want to change the payment status to "${statusText}"?`)) {
                    changePaymentStatus(paymentId, newStatus);
                }
            });

            // Refund handlers
            $('.process-refund').on('click', function(e) {
                e.preventDefault();
                
                const paymentId = $(this).data('payment-id');
                const amount = $(this).data('amount');
                
                $('#refundPaymentId').val(paymentId);
                $('#refundAmount').val(amount).attr('max', amount);
                $('#maxRefundAmount').text(amount);
                $('#refundModal').modal('show');
            });

            $('#confirmRefund').on('click', function() {
                const paymentId = $('#refundPaymentId').val();
                const amount = $('#refundAmount').val();
                const reason = $('#refundReason').val();
                
                if (!amount || !reason) {
                    alert('Please fill in all fields');
                    return;
                }
                
                processRefund(paymentId, amount, reason);
            });

            // Functions
            function changePaymentStatus(paymentId, newStatus) {
                $.post('@Url.Action("ChangeStatus")', {
                    id: paymentId,
                    newStatus: newStatus
                })
                .done(function(response) {
                    if (response.success) {
                        location.reload();
                    } else {
                        alert('Error: ' + response.message);
                    }
                })
                .fail(function() {
                    alert('Error changing payment status');
                });
            }

            function processRefund(paymentId, amount, reason) {
                $('#confirmRefund').prop('disabled', true).text('Processing...');
                
                $.post('@Url.Action("ProcessRefund")', {
                    id: paymentId,
                    refundAmount: amount,
                    reason: reason
                })
                .done(function(response) {
                    if (response.success) {
                        $('#refundModal').modal('hide');
                        location.reload();
                    } else {
                        alert('Error: ' + response.message);
                    }
                })
                .fail(function() {
                    alert('Error processing refund');
                })
                .always(function() {
                    $('#confirmRefund').prop('disabled', false).text('Process Refund');
                });
            }

            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[title]'));
            tooltipTriggerList.map(function(tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });
    </script>

    <style>
        .table-danger {
            background-color: rgba(220, 53, 69, 0.1) !important;
        }
        
        .table-warning {
            background-color: rgba(255, 193, 7, 0.1) !important;
        }
        
        .card-stats {
            border: none;
            border-radius: 0.75rem;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            min-height: 110px;
        }
        
        .bg-gradient-primary {
            background: linear-gradient(135deg, #007bff, #0056b3);
        }
        
        .bg-gradient-warning {
            background: linear-gradient(135deg, #ffc107, #e0a800);
        }
        
        .bg-gradient-success {
            background: linear-gradient(135deg, #28a745, #1e7e34);
        }
        
        .bg-gradient-danger {
            background: linear-gradient(135deg, #dc3545, #bd2130);
        }
        
        .bg-gradient-info {
            background: linear-gradient(135deg, #17a2b8, #138496);
        }
        
        .bg-gradient-secondary {
            background: linear-gradient(135deg, #6c757d, #5a6268);
        }
        
        .stats-icon {
            width: 3rem;
            height: 3rem;
            border-radius: 0.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.25rem;
        }
        
        .btn-group-sm .btn {
            padding: 0.25rem 0.5rem;
        }
    </style>
}

