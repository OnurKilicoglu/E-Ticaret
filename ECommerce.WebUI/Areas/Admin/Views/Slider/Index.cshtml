@model SliderListViewModel
@{
    ViewData["Title"] = "Slider Management";
}

<!-- Page Header -->
<div class="row mb-4">
    <div class="col-md-6">
        <h2 class="mb-0">
            <i class="bi bi-images text-primary"></i>
            Slider Management
        </h2>
        <p class="text-muted">Manage homepage banners and carousel slides</p>
    </div>
    <div class="col-md-6 text-end">
        <div class="btn-group" role="group">
            <a asp-action="Create" class="btn btn-success">
                <i class="bi bi-plus-lg"></i>
                Add New Slider
            </a>
            <button type="button" class="btn btn-outline-info" data-bs-toggle="modal" data-bs-target="#statisticsModal">
                <i class="bi bi-bar-chart"></i>
                Statistics
            </button>
        </div>
    </div>
</div>

<!-- Alert Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle-fill"></i>
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="bi bi-exclamation-triangle-fill"></i>
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Quick Statistics Cards -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card text-center bg-primary text-white">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.TotalSliders</h5>
                <p class="card-text small mb-0">Total Sliders</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center bg-success text-white">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.ActiveSliders</h5>
                <p class="card-text small mb-0">Active</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center bg-secondary text-white">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.InactiveSliders</h5>
                <p class="card-text small mb-0">Inactive</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center bg-info text-white">
            <div class="card-body py-3">
                <h5 class="card-title mb-1">@Model.Statistics.TotalImageSizeMB MB</h5>
                <p class="card-text small mb-0">Total Size</p>
            </div>
        </div>
    </div>
</div>

<!-- Filters and Search -->
<div class="card mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-4">
                <label for="searchTerm" class="form-label">Search Sliders</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-search"></i>
                    </span>
                    <input type="text" class="form-control" id="searchTerm" name="searchTerm" 
                           value="@Model.SearchTerm" placeholder="Title or description...">
                </div>
            </div>
            <div class="col-md-2">
                <label for="isActive" class="form-label">Status</label>
                <select class="form-select" id="isActive" name="isActive">
                    <option value="">All Status</option>
                    <option value="true" selected="@(Model.IsActive == true)">Active</option>
                    <option value="false" selected="@(Model.IsActive == false)">Inactive</option>
                </select>
            </div>
            <div class="col-md-2">
                <label for="sortBy" class="form-label">Sort By</label>
                <select class="form-select" id="sortBy" name="sortBy">
                    <option value="displayOrder" selected="@(Model.SortBy == "displayOrder")">Display Order</option>
                    <option value="title" selected="@(Model.SortBy == "title")">Title</option>
                    <option value="createdDate" selected="@(Model.SortBy == "createdDate")">Created Date</option>
                </select>
            </div>
            <div class="col-md-2">
                <label for="sortOrder" class="form-label">Order</label>
                <select class="form-select" id="sortOrder" name="sortOrder">
                    <option value="asc" selected="@(Model.SortOrder == "asc")">Ascending</option>
                    <option value="desc" selected="@(Model.SortOrder == "desc")">Descending</option>
                </select>
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <div class="btn-group w-100" role="group">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-funnel"></i>
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-clockwise"></i>
                    </a>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Results Info -->
@if (Model.TotalItems > 0)
{
    <div class="row mb-3">
        <div class="col-md-6">
            <p class="text-muted mb-0">
                Showing @Model.StartItem to @Model.EndItem of @Model.TotalItems sliders
                @if (Model.HasFilters)
                {
                    <span>with applied filters</span>
                }
            </p>
        </div>
        <div class="col-md-6 text-end">
            <small class="text-muted">
                Page @Model.CurrentPage of @Model.TotalPages
            </small>
        </div>
    </div>
}

<!-- Sliders Grid/List -->
<div class="card">
    <div class="card-body">
        @if (Model.TotalItems > 0)
        {
            <div class="row" id="slidersContainer">
                @foreach (var slider in Model.Sliders)
                {
                    <div class="col-md-6 col-lg-4 mb-4" data-slider-id="@slider.Id">
                        <div class="card h-100 slider-card">
                            <!-- Image Preview -->
                            <div class="card-img-top position-relative" style="height: 200px; background: #f8f9fa;">
                                @if (!string.IsNullOrEmpty(slider.ImagePath))
                                {
                                    <img src="@slider.ImagePath" alt="@slider.Title" 
                                         class="img-fluid w-100 h-100" style="object-fit: cover;">
                                }
                                else
                                {
                                    <div class="d-flex align-items-center justify-content-center h-100 text-muted">
                                        <i class="bi bi-image display-4"></i>
                                    </div>
                                }
                                
                                <!-- Status Badge -->
                                <span class="badge bg-@slider.StatusCssClass position-absolute top-0 start-0 m-2">
                                    @slider.StatusDisplayName
                                </span>
                                
                                <!-- Display Order Badge -->
                                <span class="badge bg-dark position-absolute top-0 end-0 m-2">
                                    #@slider.DisplayOrder
                                </span>
                            </div>
                            
                            <!-- Card Content -->
                            <div class="card-body">
                                <h6 class="card-title">@slider.Title</h6>
                                <p class="card-text text-muted small">@slider.TruncatedDescription</p>
                                
                                @if (!string.IsNullOrEmpty(slider.LinkUrl))
                                {
                                    <p class="card-text">
                                        <small class="text-muted">
                                            <i class="bi bi-link-45deg"></i>
                                            <a href="@slider.LinkUrl" target="_blank" class="text-decoration-none">
                                                @(slider.LinkUrl.Length > 30 ? slider.LinkUrl[..30] + "..." : slider.LinkUrl)
                                            </a>
                                        </small>
                                    </p>
                                }
                                
                                <div class="d-flex justify-content-between align-items-center">
                                    <small class="text-muted">
                                        @slider.CreatedDate.ToString("MMM dd, yyyy")
                                    </small>
                                </div>
                            </div>
                            
                            <!-- Card Actions -->
                            <div class="card-footer bg-transparent">
                                <div class="row g-2">
                                    <div class="col-6">
                                        <div class="btn-group w-100" role="group">
                                            <a asp-action="Details" asp-route-id="@slider.Id" 
                                               class="btn btn-sm btn-outline-info" title="View Details">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@slider.Id" 
                                               class="btn btn-sm btn-outline-primary" title="Edit Slider">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="btn-group w-100" role="group">
                                            <button class="btn btn-sm btn-outline-@(slider.IsActive ? "warning" : "success") toggle-status" 
                                                    data-slider-id="@slider.Id" 
                                                    title="@(slider.IsActive ? "Deactivate" : "Activate")">
                                                <i class="bi bi-@(slider.IsActive ? "pause" : "play")-fill"></i>
                                            </button>
                                            <a asp-action="Delete" asp-route-id="@slider.Id" 
                                               class="btn btn-sm btn-outline-danger" title="Delete Slider">
                                                <i class="bi bi-trash"></i>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Display Order Controls -->
                                <div class="mt-2">
                                    <div class="input-group input-group-sm">
                                        <span class="input-group-text">Order</span>
                                        <input type="number" class="form-control display-order-input" 
                                               value="@slider.DisplayOrder" 
                                               data-slider-id="@slider.Id" 
                                               min="1" max="999">
                                        <button class="btn btn-outline-secondary update-order" 
                                                data-slider-id="@slider.Id" title="Update Order">
                                            <i class="bi bi-check"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <nav aria-label="Sliders pagination" class="mt-4">
                    <ul class="pagination justify-content-center mb-0">
                        <!-- Previous Page -->
                        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                            <a class="page-link" 
                               asp-action="Index" 
                               asp-route-page="@(Model.CurrentPage - 1)" 
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-searchTerm="@Model.SearchTerm"
                               asp-route-isActive="@Model.IsActive"
                               asp-route-sortBy="@Model.SortBy"
                               asp-route-sortOrder="@Model.SortOrder">
                                <i class="bi bi-chevron-left"></i>
                                Previous
                            </a>
                        </li>

                        <!-- Page Numbers -->
                        @{
                            var startPage = Math.Max(1, Model.CurrentPage - 2);
                            var endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                        }

                        @for (var i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" 
                                   asp-action="Index" 
                                   asp-route-page="@i" 
                                   asp-route-pageSize="@Model.PageSize"
                                   asp-route-searchTerm="@Model.SearchTerm"
                                   asp-route-isActive="@Model.IsActive"
                                   asp-route-sortBy="@Model.SortBy"
                                   asp-route-sortOrder="@Model.SortOrder">@i</a>
                            </li>
                        }

                        <!-- Next Page -->
                        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                            <a class="page-link" 
                               asp-action="Index" 
                               asp-route-page="@(Model.CurrentPage + 1)" 
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-searchTerm="@Model.SearchTerm"
                               asp-route-isActive="@Model.IsActive"
                               asp-route-sortBy="@Model.SortBy"
                               asp-route-sortOrder="@Model.SortOrder">
                                Next
                                <i class="bi bi-chevron-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
            }
        }
        else
        {
            <!-- No Results -->
            <div class="text-center py-5">
                <i class="bi bi-images display-1 text-muted"></i>
                <h4 class="mt-3">No sliders found</h4>
                <p class="text-muted">
                    @if (Model.HasFilters)
                    {
                        <span>No sliders match your search criteria.</span>
                        <br>
                        <a asp-action="Index" class="btn btn-link">Clear filters</a>
                        <span>to see all sliders.</span>
                    }
                    else
                    {
                        <span>No sliders have been created yet.</span>
                        <br>
                        <a asp-action="Create" class="btn btn-primary">Create first slider</a>
                    }
                </p>
            </div>
        }
    </div>
</div>

<!-- Statistics Modal -->
<div class="modal fade" id="statisticsModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-bar-chart text-primary"></i>
                    Slider Statistics
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <dl class="row">
                    <dt class="col-sm-6">Total Sliders:</dt>
                    <dd class="col-sm-6">@Model.Statistics.TotalSliders</dd>
                    
                    <dt class="col-sm-6">Active Sliders:</dt>
                    <dd class="col-sm-6">@Model.Statistics.ActiveSliders</dd>
                    
                    <dt class="col-sm-6">Inactive Sliders:</dt>
                    <dd class="col-sm-6">@Model.Statistics.InactiveSliders</dd>
                    
                    <dt class="col-sm-6">Total Image Size:</dt>
                    <dd class="col-sm-6">@Model.Statistics.TotalImageSizeMB MB</dd>
                    
                    @if (Model.Statistics.LastUpdated.HasValue)
                    {
                        <dt class="col-sm-6">Last Updated:</dt>
                        <dd class="col-sm-6">@Model.Statistics.LastUpdated.Value.ToString("MMM dd, yyyy HH:mm")</dd>
                    }
                </dl>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Auto-submit form when filters change
            $('#isActive, #sortBy, #sortOrder').on('change', function() {
                $(this).closest('form').submit();
            });

            // Status toggle functionality
            $('.toggle-status').on('click', function() {
                const sliderId = $(this).data('slider-id');
                const button = $(this);
                
                $.post('@Url.Action("ToggleStatus")', { id: sliderId })
                    .done(function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert('Error: ' + response.message);
                        }
                    })
                    .fail(function() {
                        alert('Error updating slider status');
                    });
            });

            // Display order update functionality
            $('.update-order').on('click', function() {
                const sliderId = $(this).data('slider-id');
                const newOrder = $(`.display-order-input[data-slider-id="${sliderId}"]`).val();
                
                if (!newOrder || newOrder < 1 || newOrder > 999) {
                    alert('Display order must be between 1 and 999');
                    return;
                }
                
                $.post('@Url.Action("UpdateOrder")', { id: sliderId, newOrder: newOrder })
                    .done(function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert('Error: ' + response.message);
                        }
                    })
                    .fail(function() {
                        alert('Error updating display order');
                    });
            });

            // Enter key support for display order inputs
            $('.display-order-input').on('keypress', function(e) {
                if (e.which === 13) { // Enter key
                    const sliderId = $(this).data('slider-id');
                    $(`.update-order[data-slider-id="${sliderId}"]`).click();
                }
            });
        });
    </script>

    <style>
        .slider-card {
            transition: transform 0.2s ease-in-out;
        }
        
        .slider-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .display-order-input {
            max-width: 80px;
        }
    </style>
}
