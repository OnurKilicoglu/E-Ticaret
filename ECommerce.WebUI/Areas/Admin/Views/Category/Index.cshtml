@model CategoryListViewModel
@{
    ViewData["Title"] = "Categories";
}

<!-- Page Header -->
<div class="row mb-4">
    <div class="col-md-6">
        <h2 class="mb-0">
            <i class="bi bi-tags text-primary"></i>
            Categories Management
        </h2>
        <p class="text-muted">Manage your product categories</p>
    </div>
    <div class="col-md-6 text-end">
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i>
            Add New Category
        </a>
    </div>
</div>

<!-- Alert Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle-fill"></i>
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="bi bi-exclamation-triangle-fill"></i>
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Search and Filters -->
<div class="card mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-4">
                <label for="searchTerm" class="form-label">Search Categories</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-search"></i>
                    </span>
                    <input type="text" class="form-control" id="searchTerm" name="searchTerm" 
                           value="@Model.SearchTerm" placeholder="Search by name or description...">
                </div>
            </div>
            <div class="col-md-2">
                <label for="pageSize" class="form-label">Items per page</label>
                <select class="form-select" id="pageSize" name="pageSize">
                    <option value="5" selected="@(Model.PageSize == 5)">5</option>
                    <option value="10" selected="@(Model.PageSize == 10)">10</option>
                    <option value="25" selected="@(Model.PageSize == 25)">25</option>
                    <option value="50" selected="@(Model.PageSize == 50)">50</option>
                </select>
            </div>
            <div class="col-md-6 d-flex align-items-end">
                <button type="submit" class="btn btn-outline-primary me-2">
                    <i class="bi bi-funnel"></i>
                    Filter
                </button>
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-clockwise"></i>
                    Reset
                </a>
            </div>
        </form>
    </div>
</div>

<!-- Results Info -->
@if (Model.TotalItems > 0)
{
    <div class="row mb-3">
        <div class="col-md-6">
            <p class="text-muted">
                Showing @Model.StartItem to @Model.EndItem of @Model.TotalItems categories
                @if (!string.IsNullOrEmpty(Model.SearchTerm))
                {
                    <span>for "<strong>@Model.SearchTerm</strong>"</span>
                }
            </p>
        </div>
        <div class="col-md-6 text-end">
            <small class="text-muted">
                Page @Model.CurrentPage of @Model.TotalPages
            </small>
        </div>
    </div>
}

<!-- Categories Table -->
<div class="card">
    <div class="card-body">
        @if (Model.TotalItems > 0)
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-light">
                        <tr>
                            <th scope="col" width="40">
                                <i class="bi bi-image text-muted"></i>
                            </th>
                            <th scope="col">Name</th>
                            <th scope="col" class="d-none d-md-table-cell">Description</th>
                            <th scope="col" class="text-center" width="100">Display Order</th>
                            <th scope="col" class="text-center d-none d-lg-table-cell" width="100">Products</th>
                            <th scope="col" class="text-center" width="80">Status</th>
                            <th scope="col" class="text-center" width="100">Created</th>
                            <th scope="col" class="text-center" width="150">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var category in Model.Categories)
                        {
                            <tr>
                                <td>
                                    @if (!string.IsNullOrEmpty(category.ImageUrl))
                                    {
                                        <img src="@category.ImageUrl" alt="@category.Name" 
                                             class="rounded" style="width: 30px; height: 30px; object-fit: cover;">
                                    }
                                    else
                                    {
                                        <div class="bg-light rounded d-flex align-items-center justify-content-center" 
                                             style="width: 30px; height: 30px;">
                                            <i class="bi bi-image text-muted"></i>
                                        </div>
                                    }
                                </td>
                                <td>
                                    <div>
                                        <strong>@category.Name</strong>
                                        @if (!category.IsActive)
                                        {
                                            <span class="badge bg-secondary ms-1">Inactive</span>
                                        }
                                    </div>
                                    <div class="d-md-none">
                                        @if (!string.IsNullOrEmpty(category.Description))
                                        {
                                            <small class="text-muted">
                                                @(category.Description.Length > 50 ? category.Description.Substring(0, 50) + "..." : category.Description)
                                            </small>
                                        }
                                    </div>
                                </td>
                                <td class="d-none d-md-table-cell">
                                    @if (!string.IsNullOrEmpty(category.Description))
                                    {
                                        <span class="text-muted">
                                            @(category.Description.Length > 100 ? category.Description.Substring(0, 100) + "..." : category.Description)
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted fst-italic">No description</span>
                                    }
                                </td>
                                <td class="text-center">
                                    <span class="badge bg-light text-dark border">@category.DisplayOrder</span>
                                </td>
                                <td class="text-center d-none d-lg-table-cell">
                                    @if (category.ProductCount > 0)
                                    {
                                        <span class="badge bg-info">@category.ProductCount</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">0</span>
                                    }
                                </td>
                                <td class="text-center">
                                    @if (category.IsActive)
                                    {
                                        <span class="badge bg-success">
                                            <i class="bi bi-check-circle"></i>
                                            Active
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">
                                            <i class="bi bi-x-circle"></i>
                                            Inactive
                                        </span>
                                    }
                                </td>
                                <td class="text-center">
                                    <small class="text-muted">
                                        @category.CreatedDate.ToString("MM/dd/yyyy")
                                    </small>
                                </td>
                                <td class="text-center">
                                    <div class="btn-group" role="group" aria-label="Category actions">
                                        <a asp-action="Edit" asp-route-id="@category.Id" 
                                           class="btn btn-sm btn-outline-primary" title="Edit Category">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@category.Id" 
                                           class="btn btn-sm btn-outline-danger" title="Delete Category">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <nav aria-label="Categories pagination" class="mt-4">
                    <ul class="pagination justify-content-center">
                        <!-- Previous Page -->
                        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                            <a class="page-link" 
                               asp-action="Index" 
                               asp-route-searchTerm="@Model.SearchTerm" 
                               asp-route-page="@(Model.CurrentPage - 1)" 
                               asp-route-pageSize="@Model.PageSize">
                                <i class="bi bi-chevron-left"></i>
                                Previous
                            </a>
                        </li>

                        <!-- Page Numbers -->
                        @{
                            var startPage = Math.Max(1, Model.CurrentPage - 2);
                            var endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                        }

                        @if (startPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" 
                                   asp-action="Index" 
                                   asp-route-searchTerm="@Model.SearchTerm" 
                                   asp-route-page="1" 
                                   asp-route-pageSize="@Model.PageSize">1</a>
                            </li>
                            @if (startPage > 2)
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            }
                        }

                        @for (var i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" 
                                   asp-action="Index" 
                                   asp-route-searchTerm="@Model.SearchTerm" 
                                   asp-route-page="@i" 
                                   asp-route-pageSize="@Model.PageSize">@i</a>
                            </li>
                        }

                        @if (endPage < Model.TotalPages)
                        {
                            @if (endPage < Model.TotalPages - 1)
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            }
                            <li class="page-item">
                                <a class="page-link" 
                                   asp-action="Index" 
                                   asp-route-searchTerm="@Model.SearchTerm" 
                                   asp-route-page="@Model.TotalPages" 
                                   asp-route-pageSize="@Model.PageSize">@Model.TotalPages</a>
                            </li>
                        }

                        <!-- Next Page -->
                        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                            <a class="page-link" 
                               asp-action="Index" 
                               asp-route-searchTerm="@Model.SearchTerm" 
                               asp-route-page="@(Model.CurrentPage + 1)" 
                               asp-route-pageSize="@Model.PageSize">
                                Next
                                <i class="bi bi-chevron-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
            }
        }
        else
        {
            <!-- No Results -->
            <div class="text-center py-5">
                <i class="bi bi-inbox display-1 text-muted"></i>
                <h4 class="mt-3">No categories found</h4>
                @if (!string.IsNullOrEmpty(Model.SearchTerm))
                {
                    <p class="text-muted">
                        No categories match your search criteria "<strong>@Model.SearchTerm</strong>".
                        <br>
                        <a asp-action="Index" class="btn btn-link">Clear search</a> or
                        <a asp-action="Create" class="btn btn-link">create a new category</a>.
                    </p>
                }
                else
                {
                    <p class="text-muted">
                        Get started by creating your first category.
                    </p>
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="bi bi-plus-circle"></i>
                        Create Category
                    </a>
                }
            </div>
        }
    </div>
</div>
