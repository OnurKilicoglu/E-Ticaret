@model ECommerce.WebUI.Models.BlogDetailViewModel

@{
    ViewData["Title"] = Model.MetaTitle;
    ViewData["MetaDescription"] = Model.MetaDescription;
}

@section Head {
    <meta name="description" content="@Model.MetaDescription">
    <meta property="og:title" content="@Model.MetaTitle">
    <meta property="og:description" content="@Model.MetaDescription">
    @if (!string.IsNullOrEmpty(Model.Post.ImageUrl))
    {
        <meta property="og:image" content="@($"{Context.Request.Scheme}://{Context.Request.Host}{Model.Post.ImageUrl}")">
    }
    <meta property="og:type" content="article">
    <meta property="article:published_time" content="@Model.Post.CreatedDate.ToString("s")Z">
    @if (!string.IsNullOrEmpty(Model.Post.Author))
    {
        <meta property="article:author" content="@Model.Post.Author">
    }
    @foreach (var tag in Model.Tags)
    {
        <meta property="article:tag" content="@tag">
    }
}

<!-- Breadcrumb -->
<nav aria-label="breadcrumb" class="bg-light py-2">
    <div class="container">
        <ol class="breadcrumb mb-0">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="breadcrumb-item"><a asp-controller="Blog" asp-action="Index">Blog</a></li>
            @if (!string.IsNullOrEmpty(Model.Post.Category))
            {
                <li class="breadcrumb-item"><a asp-controller="Blog" asp-action="Index" asp-route-category="@Model.Post.Category">@Model.Post.Category</a></li>
            }
            <li class="breadcrumb-item active" aria-current="page">@Model.Post.Title</li>
        </ol>
    </div>
</nav>

<article class="container my-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <!-- Article Header -->
            <header class="mb-5">
                <!-- Category -->
                @if (!string.IsNullOrEmpty(Model.Post.Category))
                {
                    <div class="mb-3">
                        <a asp-controller="Blog" asp-action="Index" asp-route-category="@Model.Post.Category" 
                           class="badge bg-primary text-decoration-none fs-6 py-2 px-3">
                            <i class="bi bi-tag me-1"></i>@Model.Post.Category
                        </a>
                    </div>
                }
                
                <!-- Title -->
                <h1 class="display-4 fw-bold text-dark mb-4">@Model.Post.Title</h1>
                
                <!-- Article Meta -->
                <div class="d-flex flex-wrap align-items-center text-muted mb-4">
                    @if (!string.IsNullOrEmpty(Model.Post.Author))
                    {
                        <div class="me-4 mb-2">
                            <i class="bi bi-person-circle me-2"></i>
                            <span>By <strong>@Model.Post.Author</strong></span>
                        </div>
                    }
                    <div class="me-4 mb-2">
                        <i class="bi bi-calendar3 me-2"></i>
                        <span>@((Model.Post.PublishedDate ?? Model.Post.CreatedDate).ToLongDateString())</span>
                    </div>
                    <div class="me-4 mb-2">
                        <i class="bi bi-clock me-2"></i>
                        <span>@Model.ReadingTime</span>
                    </div>
                    <div class="mb-2">
                        <i class="bi bi-eye me-2"></i>
                        <span>@Model.Post.ViewCount views</span>
                    </div>
                </div>
                
                <!-- Summary/Excerpt -->
                @if (!string.IsNullOrEmpty(Model.Post.Summary))
                {
                    <div class="lead text-muted border-start border-primary border-4 ps-4 mb-4">
                        @Model.Post.Summary
                    </div>
                }
            </header>
            
            <!-- Cover Image -->
            @if (!string.IsNullOrEmpty(Model.Post.ImageUrl))
            {
                <div class="mb-5">
                    <img src="@Model.Post.ImageUrl" 
                         alt="@Model.Post.Title" 
                         class="img-fluid rounded shadow-sm w-100"
                         style="max-height: 400px; object-fit: cover;"
                         onerror="this.style.display='none'">
                </div>
            }
            
            <!-- Article Content -->
            <div class="article-content mb-5">
                @Html.Raw(Model.Post.Content)
            </div>
            
            <!-- Tags -->
            @if (Model.Tags.Any())
            {
                <div class="mb-5">
                    <h6 class="fw-bold mb-3">Tags:</h6>
                    <div class="d-flex flex-wrap gap-2">
                        @foreach (var tag in Model.Tags)
                        {
                            <a asp-controller="Blog" asp-action="Index" asp-route-tag="@tag" 
                               class="badge bg-light text-dark text-decoration-none py-2 px-3 border tag-badge">
                                #@tag
                            </a>
                        }
                    </div>
                </div>
            }
            
            <!-- Article Footer -->
            <footer class="border-top pt-4 mb-5">
                <div class="row align-items-center">
                    <div class="col-md-6">
                        <!-- Share Buttons -->
                        <h6 class="fw-bold mb-3">Share this article:</h6>
                        <div class="d-flex gap-2">
                            <a href="https://www.facebook.com/sharer/sharer.php?u=@(Context.Request.Scheme)://@(Context.Request.Host)@(Context.Request.Path)" 
                               target="_blank" class="btn btn-outline-primary btn-sm">
                                <i class="bi bi-facebook"></i> Facebook
                            </a>
                            <a href="https://twitter.com/intent/tweet?url=@(Context.Request.Scheme)://@(Context.Request.Host)@(Context.Request.Path)&text=@Uri.EscapeDataString(Model.Post.Title)" 
                               target="_blank" class="btn btn-outline-info btn-sm">
                                <i class="bi bi-twitter"></i> Twitter
                            </a>
                            <a href="https://www.linkedin.com/sharing/share-offsite/?url=@(Context.Request.Scheme)://@(Context.Request.Host)@(Context.Request.Path)" 
                               target="_blank" class="btn btn-outline-secondary btn-sm">
                                <i class="bi bi-linkedin"></i> LinkedIn
                            </a>
                            <button type="button" class="btn btn-outline-secondary btn-sm" 
                                    onclick="copyToClipboard('@(Context.Request.Scheme)://@(Context.Request.Host)@(Context.Request.Path)')">
                                <i class="bi bi-link-45deg"></i> Copy Link
                            </button>
                        </div>
                    </div>
                    <div class="col-md-6 text-md-end mt-3 mt-md-0">
                        @if (Model.Post.UpdatedDate != Model.Post.CreatedDate)
                        {
                            <small class="text-muted">
                                <i class="bi bi-pencil me-1"></i>
                                Last updated: @Model.Post.UpdatedDate?.ToShortDateString()
                            </small>
                        }
                    </div>
                </div>
            </footer>
        </div>
    </div>
</article>

<!-- Related Posts Section -->
@if (Model.RelatedPosts.Any())
{
    <section class="bg-light py-5">
        <div class="container">
            <div class="row">
                <div class="col-12 text-center mb-5">
                    <h2 class="fw-bold">Related Posts</h2>
                    <p class="text-muted">You might also be interested in these articles</p>
                </div>
            </div>
            <div class="row g-4">
                @foreach (var relatedPost in Model.RelatedPosts.Take(3))
                {
                    <div class="col-lg-4 col-md-6">
                        <article class="card h-100 shadow-sm border-0 related-post-card">
                            @if (!string.IsNullOrEmpty(relatedPost.ImageUrl))
                            {
                                <div class="position-relative overflow-hidden">
                                    <img src="@relatedPost.ImageUrl" 
                                         alt="@relatedPost.Title" 
                                         class="card-img-top related-post-image"
                                         style="height: 200px; object-fit: cover;"
                                         onerror="this.parentElement.style.display='none'">
                                    @if (!string.IsNullOrEmpty(relatedPost.Category))
                                    {
                                        <span class="position-absolute top-0 start-0 m-3 badge bg-primary">
                                            @relatedPost.Category
                                        </span>
                                    }
                                </div>
                            }
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title">
                                    <a asp-controller="Blog" asp-action="Details" asp-route-slug="@relatedPost.Slug" 
                                       class="text-decoration-none text-dark stretched-link">
                                        @relatedPost.Title
                                    </a>
                                </h5>
                                @if (!string.IsNullOrEmpty(relatedPost.Summary))
                                {
                                    <p class="card-text text-muted flex-grow-1">
                                        @(relatedPost.Summary.Length > 120 ? relatedPost.Summary.Substring(0, 117) + "..." : relatedPost.Summary)
                                    </p>
                                }
                                <div class="mt-auto">
                                    <small class="text-muted">
                                        <i class="bi bi-calendar3 me-1"></i>@(relatedPost.PublishedDate ?? relatedPost.CreatedDate).ToShortDateString()
                                        <span class="mx-2">•</span>
                                        <i class="bi bi-clock me-1"></i>@((relatedPost.Content?.Length ?? 0) / 200 + 1) min read
                                    </small>
                                </div>
                            </div>
                        </article>
                    </div>
                }
            </div>
            <div class="row mt-4">
                <div class="col-12 text-center">
                    <a asp-controller="Blog" asp-action="Index" class="btn btn-primary">
                        <i class="bi bi-journal me-2"></i>View All Posts
                    </a>
                </div>
            </div>
        </div>
    </section>
}

<!-- Back to Blog -->
<section class="py-4 border-top">
    <div class="container">
        <div class="row">
            <div class="col-12 text-center">
                <a asp-controller="Blog" asp-action="Index" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-left me-2"></i>Back to Blog
                </a>
            </div>
        </div>
    </div>
</section>

@section Styles {
    <style>
        .article-content {
            font-size: 1.1rem;
            line-height: 1.8;
            color: #495057;
        }
        
        .article-content h1,
        .article-content h2,
        .article-content h3,
        .article-content h4,
        .article-content h5,
        .article-content h6 {
            color: #212529;
            font-weight: 600;
            margin-top: 2rem;
            margin-bottom: 1rem;
        }
        
        .article-content p {
            margin-bottom: 1.5rem;
        }
        
        .article-content img {
            max-width: 100%;
            height: auto;
            border-radius: 0.5rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin: 1.5rem 0;
        }
        
        .article-content blockquote {
            border-left: 4px solid var(--bs-primary);
            padding-left: 1.5rem;
            margin: 2rem 0;
            font-style: italic;
            color: #6c757d;
        }
        
        .article-content code {
            background-color: #f8f9fa;
            color: #e83e8c;
            padding: 0.2rem 0.4rem;
            border-radius: 0.25rem;
            font-size: 0.9em;
        }
        
        .article-content pre {
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 0.5rem;
            padding: 1rem;
            overflow-x: auto;
        }
        
        .article-content pre code {
            background: none;
            color: inherit;
            padding: 0;
        }
        
        .article-content ul,
        .article-content ol {
            margin-bottom: 1.5rem;
            padding-left: 2rem;
        }
        
        .article-content li {
            margin-bottom: 0.5rem;
        }
        
        .tag-badge {
            transition: all 0.3s ease;
        }
        
        .tag-badge:hover {
            background-color: var(--bs-primary) !important;
            color: white !important;
            transform: translateY(-1px);
        }
        
        .related-post-card {
            transition: all 0.3s ease;
        }
        
        .related-post-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.15) !important;
        }
        
        .related-post-image {
            transition: transform 0.3s ease;
        }
        
        .related-post-card:hover .related-post-image {
            transform: scale(1.05);
        }
        
        .breadcrumb {
            background: transparent;
            padding: 0.75rem 0;
        }
        
        .breadcrumb-item + .breadcrumb-item::before {
            content: ">";
            color: #6c757d;
        }
        
        .breadcrumb-item a {
            color: #6c757d;
            text-decoration: none;
        }
        
        .breadcrumb-item a:hover {
            color: var(--bs-primary);
        }
        
        .breadcrumb-item.active {
            color: #495057;
            font-weight: 500;
        }
        
        /* Social Share Buttons */
        .btn-outline-primary:hover,
        .btn-outline-info:hover,
        .btn-outline-secondary:hover {
            transform: translateY(-1px);
        }
        
        /* Mobile Responsiveness */
        @@media (max-width: 768px) {
            .display-4 {
                font-size: 2rem;
            }
            
            .article-content {
                font-size: 1rem;
                line-height: 1.6;
            }
            
            .d-flex.gap-2 {
                gap: 0.5rem !important;
            }
            
            .btn-sm {
                padding: 0.375rem 0.75rem;
                font-size: 0.875rem;
            }
        }
        
        @@media (max-width: 576px) {
            .container {
                padding-left: 1rem;
                padding-right: 1rem;
            }
            
            .breadcrumb {
                font-size: 0.875rem;
            }
            
            .display-4 {
                font-size: 1.75rem;
            }
            
            .lead {
                font-size: 1rem;
            }
        }
    </style>
}

@section Scripts {
    <script>
        function copyToClipboard(url) {
            navigator.clipboard.writeText(url).then(function() {
                // Show success message
                if (typeof showToast === 'function') {
                    showToast('Link copied to clipboard!', 'success');
                } else {
                    alert('Link copied to clipboard!');
                }
            }, function(err) {
                console.error('Could not copy text: ', err);
                if (typeof showToast === 'function') {
                    showToast('Failed to copy link', 'error');
                } else {
                    alert('Failed to copy link');
                }
            });
        }
        
        // Toast notification function (if not already defined)
        if (typeof showToast === 'undefined') {
            function showToast(message, type = 'info') {
                const toastHtml = `
                    <div class="toast align-items-center text-white bg-${type === 'success' ? 'success' : type === 'error' ? 'danger' : 'info'} border-0" role="alert">
                        <div class="d-flex">
                            <div class="toast-body">
                                ${message}
                            </div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                        </div>
                    </div>
                `;
                
                // Create toast container if it doesn't exist
                if (!$('#toastContainer').length) {
                    $('body').append('<div id="toastContainer" class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1060;"></div>');
                }
                
                const $toast = $(toastHtml);
                $('#toastContainer').append($toast);
                
                const bsToast = new bootstrap.Toast($toast[0]);
                bsToast.show();
                
                // Remove toast element after it's hidden
                $toast.on('hidden.bs.toast', function() {
                    $(this).remove();
                });
            }
        }
        
        // Smooth scrolling for anchor links within the article
        $(document).ready(function() {
            $('a[href^="#"]').on('click', function(event) {
                const target = $(this.getAttribute('href'));
                if (target.length) {
                    event.preventDefault();
                    $('html, body').stop().animate({
                        scrollTop: target.offset().top - 100
                    }, 1000);
                }
            });
        });
    </script>
}