@model ECommerce.WebUI.Models.WishlistViewModel

@{
    ViewData["Title"] = "My Wishlist";
}

<!-- Breadcrumb -->
<nav aria-label="breadcrumb" class="bg-light py-2">
    <div class="container">
        <ol class="breadcrumb mb-0">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="breadcrumb-item"><a asp-controller="Account" asp-action="Profile">My Account</a></li>
            <li class="breadcrumb-item active" aria-current="page">Wishlist</li>
        </ol>
    </div>
</nav>

<div class="container my-5">
    <div class="row">
        <!-- Account Sidebar -->
        <div class="col-lg-3 mb-4">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h6 class="card-title mb-0">
                        <i class="bi bi-person-circle me-2"></i>My Account
                    </h6>
                </div>
                <div class="list-group list-group-flush">
                    <a asp-controller="Account" asp-action="Profile" class="list-group-item list-group-item-action">
                        <i class="bi bi-person me-2"></i>Profile
                    </a>
                    <a asp-controller="Account" asp-action="Orders" class="list-group-item list-group-item-action">
                        <i class="bi bi-bag me-2"></i>My Orders
                    </a>
                    <a asp-controller="Account" asp-action="Wishlist" class="list-group-item list-group-item-action active">
                        <i class="bi bi-heart me-2"></i>Wishlist
                        @if (Model.TotalItems > 0)
                        {
                            <span class="badge bg-danger ms-auto">@Model.TotalItems</span>
                        }
                    </a>
                    <a asp-controller="Account" asp-action="Addresses" class="list-group-item list-group-item-action">
                        <i class="bi bi-geo-alt me-2"></i>Addresses
                    </a>
                    <a asp-controller="Account" asp-action="Settings" class="list-group-item list-group-item-action">
                        <i class="bi bi-gear me-2"></i>Settings
                    </a>
                </div>
            </div>
        </div>

        <!-- Wishlist Content -->
        <div class="col-lg-9">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="mb-1">My Wishlist</h2>
                    <p class="text-muted mb-0">
                        @if (Model.TotalItems > 0)
                        {
                            <span>@Model.TotalItems item@(Model.TotalItems == 1 ? "" : "s") saved for later</span>
                        }
                        else
                        {
                            <span>Save your favorite products for later</span>
                        }
                    </p>
                </div>
                @if (Model.TotalItems > 0)
                {
                    <div class="dropdown">
                        <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="sortDropdown" data-bs-toggle="dropdown">
                            <i class="bi bi-sort-down me-1"></i>Sort
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="#">Recently Added</a></li>
                            <li><a class="dropdown-item" href="#">Price: Low to High</a></li>
                            <li><a class="dropdown-item" href="#">Price: High to Low</a></li>
                            <li><a class="dropdown-item" href="#">Name: A to Z</a></li>
                        </ul>
                    </div>
                }
            </div>

            @if (Model.Items.Any())
            {
                <!-- Wishlist Items Grid -->
                <div class="row g-4">
                    @foreach (var item in Model.Items)
                    {
                        <div class="col-md-6 col-xl-4">
                            <div class="card h-100 wishlist-item" data-product-id="@item.ProductId">
                                <!-- Product Image -->
                                <div class="position-relative">
                                    @if (!string.IsNullOrEmpty(item.ProductImage))
                                    {
                                        <img src="@item.ProductImage" class="card-img-top" alt="@item.ProductName" style="height: 200px; object-fit: cover;">
                                    }
                                    else
                                    {
                                        <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                            <i class="bi bi-image text-muted" style="font-size: 3rem;"></i>
                                        </div>
                                    }
                                    
                                    <!-- Remove from Wishlist -->
                                    <button class="btn btn-outline-danger btn-sm position-absolute top-0 end-0 m-2 remove-wishlist-btn" 
                                            data-product-id="@item.ProductId" title="Remove from wishlist">
                                        <i class="bi bi-heart-fill"></i>
                                    </button>
                                    
                                    <!-- Discount Badge -->
                                    @if (item.HasDiscount)
                                    {
                                        <div class="position-absolute top-0 start-0 m-2">
                                            <span class="badge bg-danger">-@item.DiscountPercentage%</span>
                                        </div>
                                    }
                                    
                                    <!-- Stock Status -->
                                    @if (!item.IsInStock)
                                    {
                                        <div class="position-absolute bottom-0 start-0 end-0 bg-dark bg-opacity-75 text-white text-center py-2">
                                            <small><i class="bi bi-exclamation-triangle me-1"></i>Out of Stock</small>
                                        </div>
                                    }
                                </div>
                                
                                <!-- Card Body -->
                                <div class="card-body d-flex flex-column">
                                    <!-- Category -->
                                    @if (!string.IsNullOrEmpty(item.Category))
                                    {
                                        <small class="text-muted mb-2">@item.Category</small>
                                    }
                                    
                                    <!-- Product Name -->
                                    <h6 class="card-title">
                                        <a asp-controller="Product" asp-action="Details" asp-route-slug="@item.ProductSlug" 
                                           class="text-decoration-none text-dark">
                                            @item.ProductName
                                        </a>
                                    </h6>
                                    
                                    <!-- Rating -->
                                    @if (item.Rating.HasValue)
                                    {
                                        <div class="mb-2">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                @if (i <= item.Rating.Value)
                                                {
                                                    <i class="bi bi-star-fill text-warning"></i>
                                                }
                                                else if (i - 0.5 <= item.Rating.Value)
                                                {
                                                    <i class="bi bi-star-half text-warning"></i>
                                                }
                                                else
                                                {
                                                    <i class="bi bi-star text-muted"></i>
                                                }
                                            }
                                            <small class="text-muted ms-1">(@item.ReviewCount)</small>
                                        </div>
                                    }
                                    
                                    <!-- Price -->
                                    <div class="mb-3">
                                        <span class="h5 text-primary mb-0">$@item.Price.ToString("F2")</span>
                                        @if (item.HasDiscount)
                                        {
                                            <small class="text-muted text-decoration-line-through ms-2">$@item.OriginalPrice?.ToString("F2")</small>
                                        }
                                    </div>
                                    
                                    <!-- Added Date -->
                                    <small class="text-muted mb-3">Added on @item.FormattedAddedDate</small>
                                    
                                    <!-- Actions -->
                                    <div class="mt-auto">
                                        @if (item.IsInStock)
                                        {
                                            <button class="btn btn-primary w-100 mb-2 add-to-cart-btn" data-product-id="@item.ProductId">
                                                <i class="bi bi-cart-plus me-1"></i>Add to Cart
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-secondary w-100 mb-2" disabled>
                                                <i class="bi bi-exclamation-triangle me-1"></i>Out of Stock
                                            </button>
                                        }
                                        <div class="d-flex gap-2">
                                            <a asp-controller="Product" asp-action="Details" asp-route-slug="@item.ProductSlug" 
                                               class="btn btn-outline-primary flex-fill">
                                                <i class="bi bi-eye me-1"></i>View Details
                                            </a>
                                            <button class="btn btn-outline-secondary share-btn" data-product-name="@item.ProductName" 
                                                    data-product-url="@Url.Action("Details", "Product", new { slug = item.ProductSlug })">
                                                <i class="bi bi-share"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                
                <!-- Action Buttons -->
                <div class="row mt-4">
                    <div class="col-12 text-center">
                        <button class="btn btn-outline-primary me-3" id="addAllToCartBtn">
                            <i class="bi bi-cart-plus me-2"></i>Add All to Cart
                        </button>
                        <button class="btn btn-outline-danger" id="clearWishlistBtn">
                            <i class="bi bi-trash me-2"></i>Clear Wishlist
                        </button>
                    </div>
                </div>
            }
            else
            {
                <!-- Empty Wishlist -->
                <div class="text-center py-5">
                    <div class="mb-4">
                        <i class="bi bi-heart display-1 text-muted"></i>
                    </div>
                    <h4 class="mb-3">Your wishlist is empty</h4>
                    <p class="text-muted mb-4">
                        Save items you love for later! Browse our products and click the heart icon to add them to your wishlist.
                    </p>
                    <div class="d-flex justify-content-center gap-3 flex-wrap">
                        <a asp-controller="Catalog" asp-action="Index" class="btn btn-primary">
                            <i class="bi bi-grid me-2"></i>Browse Products
                        </a>
                        <a asp-controller="Home" asp-action="Index" class="btn btn-outline-secondary">
                            <i class="bi bi-house me-2"></i>Back to Home
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Styles {
    <style>
        .wishlist-item {
            transition: all 0.3s ease;
        }
        
        .wishlist-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.15);
        }
        
        .remove-wishlist-btn {
            transition: all 0.3s ease;
            background: rgba(255,255,255,0.9);
            border: 1px solid #dc3545;
        }
        
        .remove-wishlist-btn:hover {
            background: #dc3545;
            color: white;
            transform: scale(1.1);
        }
        
        .add-to-cart-btn {
            transition: all 0.3s ease;
        }
        
        .add-to-cart-btn:hover {
            transform: translateY(-2px);
        }
        
        .share-btn {
            transition: all 0.3s ease;
        }
        
        .share-btn:hover {
            transform: scale(1.1);
        }
        
        /* Mobile Responsiveness */
        @@media (max-width: 768px) {
            .container {
                padding-left: 1rem;
                padding-right: 1rem;
            }
            
            .col-lg-3 {
                margin-bottom: 2rem;
            }
            
            .d-flex.gap-2 {
                gap: 0.5rem !important;
            }
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Remove from wishlist
            $('.remove-wishlist-btn').on('click', function() {
                const productId = $(this).data('product-id');
                const itemCard = $(this).closest('.wishlist-item');
                
                if (confirm('Are you sure you want to remove this item from your wishlist?')) {
                    $.post('@Url.Action("RemoveFromWishlist")', { productId: productId })
                        .done(function(response) {
                            if (response.success) {
                                itemCard.fadeOut(300, function() {
                                    $(this).remove();
                                    updateWishlistCount();
                                });
                                showToast(response.message, 'success');
                            } else {
                                showToast(response.message, 'error');
                            }
                        })
                        .fail(function() {
                            showToast('Error removing item from wishlist', 'error');
                        });
                }
            });
            
            // Add to cart from wishlist
            $('.add-to-cart-btn').on('click', function() {
                const productId = $(this).data('product-id');
                const button = $(this);
                const originalText = button.html();
                
                button.prop('disabled', true).html('<i class="spinner-border spinner-border-sm me-1"></i>Adding...');
                
                // TODO: Implement add to cart functionality
                setTimeout(function() {
                    button.prop('disabled', false).html(originalText);
                    showToast('Product added to cart!', 'success');
                }, 1000);
            });
            
            // Add all to cart
            $('#addAllToCartBtn').on('click', function() {
                if (confirm('Add all wishlist items to cart?')) {
                    const button = $(this);
                    const originalText = button.html();
                    
                    button.prop('disabled', true).html('<i class="spinner-border spinner-border-sm me-2"></i>Adding All...');
                    
                    // TODO: Implement add all to cart functionality
                    setTimeout(function() {
                        button.prop('disabled', false).html(originalText);
                        showToast('All available items added to cart!', 'success');
                    }, 2000);
                }
            });
            
            // Clear wishlist
            $('#clearWishlistBtn').on('click', function() {
                if (confirm('Are you sure you want to clear your entire wishlist? This action cannot be undone.')) {
                    // TODO: Implement clear wishlist functionality
                    $('.wishlist-item').fadeOut(300, function() {
                        location.reload();
                    });
                    showToast('Wishlist cleared successfully', 'success');
                }
            });
            
            // Share product
            $('.share-btn').on('click', function() {
                const productName = $(this).data('product-name');
                const productUrl = window.location.origin + $(this).data('product-url');
                
                if (navigator.share) {
                    navigator.share({
                        title: productName,
                        url: productUrl
                    });
                } else {
                    navigator.clipboard.writeText(productUrl).then(function() {
                        showToast('Product link copied to clipboard!', 'success');
                    });
                }
            });
        });
        
        function updateWishlistCount() {
            const remainingItems = $('.wishlist-item:visible').length;
            if (remainingItems === 0) {
                setTimeout(function() {
                    location.reload();
                }, 500);
            }
        }
        
        // Toast notification function
        function showToast(message, type = 'info') {
            const toastHtml = `
                <div class="toast align-items-center text-white bg-${type === 'success' ? 'success' : type === 'error' ? 'danger' : 'info'} border-0" role="alert">
                    <div class="d-flex">
                        <div class="toast-body">
                            ${message}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                    </div>
                </div>
            `;
            
            if (!$('#toastContainer').length) {
                $('body').append('<div id="toastContainer" class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1060;"></div>');
            }
            
            const $toast = $(toastHtml);
            $('#toastContainer').append($toast);
            
            const bsToast = new bootstrap.Toast($toast[0]);
            bsToast.show();
            
            $toast.on('hidden.bs.toast', function() {
                $(this).remove();
            });
        }
    </script>
}
